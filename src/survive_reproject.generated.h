// NOTE: Auto-generated code; see tools/generate_reprojection_functions
#include <math.h>
static inline void gen_reproject_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale,
										   FLT phase_0, FLT phase_1, FLT tilt_scale, FLT tilt_0, FLT tilt_1,
										   FLT curve_scale, FLT curve_0, FLT curve_1, FLT gib_scale, FLT gibPhase_0,
										   FLT gibPhase_1, FLT gibMag_0, FLT gibMag_1) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qj;
	FLT x1 = lh_qk * lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = tan(tilt_0 * tilt_scale);
	FLT x4 = pow(lh_qi, 2);
	FLT x5 = pow(lh_qj, 2);
	FLT x6 = x4 + x5;
	FLT x7 = pow(lh_qk, 2);
	FLT x8 = sqrt(pow(lh_qw, 2) + x6 + x7);
	FLT x9 = lh_qi * lh_qk;
	FLT x10 = lh_qj * lh_qw;
	FLT x11 = x10 + x9;
	FLT x12 = 2 * lh_px * x8;
	FLT x13 = lh_qj * lh_qk;
	FLT x14 = lh_qi * lh_qw;
	FLT x15 = x13 - x14;
	FLT x16 = 2 * lh_py * x8;
	FLT x17 = 2 * x8;
	FLT x18 = x17 * x6 - 1;
	FLT x19 = obj_qi * obj_qk;
	FLT x20 = obj_qj * obj_qw;
	FLT x21 = sensor_z * (x19 + x20);
	FLT x22 = pow(obj_qi, 2);
	FLT x23 = pow(obj_qj, 2);
	FLT x24 = x22 + x23;
	FLT x25 = pow(obj_qk, 2);
	FLT x26 = sqrt(pow(obj_qw, 2) + x24 + x25);
	FLT x27 = 2 * x26;
	FLT x28 = obj_qi * obj_qj;
	FLT x29 = obj_qk * obj_qw;
	FLT x30 = sensor_y * (x28 - x29);
	FLT x31 = x23 + x25;
	FLT x32 = obj_px - sensor_x * (x27 * x31 - 1) + x21 * x27 + x27 * x30;
	FLT x33 = 2 * x32 * x8;
	FLT x34 = sensor_x * (x28 + x29);
	FLT x35 = obj_qj * obj_qk;
	FLT x36 = obj_qi * obj_qw;
	FLT x37 = sensor_z * (x35 - x36);
	FLT x38 = x22 + x25;
	FLT x39 = obj_py - sensor_y * (x27 * x38 - 1) + x27 * x34 + x27 * x37;
	FLT x40 = 2 * x39 * x8;
	FLT x41 = sensor_y * (x35 + x36);
	FLT x42 = sensor_x * (x19 - x20);
	FLT x43 = obj_pz - sensor_z * (x24 * x27 - 1) + x27 * x41 + x27 * x42;
	FLT x44 = lh_pz * x18 - x11 * x12 + x11 * x33 - x15 * x16 + x15 * x40 - x18 * x43;
	FLT x45 = 1.0 / x44;
	FLT x46 = 2 * x3 * x45 * x8;
	FLT x47 = x13 + x14;
	FLT x48 = 2 * lh_pz * x8;
	FLT x49 = x17 * (x4 + x7) - 1;
	FLT x50 = 2 * x43 * x8;
	FLT x51 = lh_py * x49 - x12 * x2 + x2 * x33 - x39 * x49 - x47 * x48 + x47 * x50;
	FLT x52 = pow(x44, 2);
	FLT x53 = 1.0 / x52;
	FLT x54 = 4 * curve_0 * curve_scale * x51 * x53 * x8;
	FLT x55 = x3 * x51;
	FLT x56 = 2 * x11 * x53 * x8;
	FLT x57 = pow(x51, 2);
	FLT x58 = curve_0 * x57;
	FLT x59 = pow(x44, -3);
	FLT x60 = 4 * curve_scale * x11 * x59 * x8;
	FLT x61 = x0 + x1;
	FLT x62 = -x10 + x9;
	FLT x63 = x17 * (x5 + x7) - 1;
	FLT x64 = lh_px * x63 - x16 * x61 - x32 * x63 + x40 * x61 - x48 * x62 + x50 * x62;
	FLT x65 = pow(x64, 2);
	FLT x66 = 1.0 / (x52 + x65);
	FLT x67 = x64 * x66;
	FLT x68 = 2 * x11 * x67 * x8;
	FLT x69 = x44 * x66;
	FLT x70 = x63 * x69;
	FLT x71 = cos(gibPhase_0 + atan2(x64, x44));
	FLT x72 = gibMag_0 * gib_scale * x71;
	FLT x73 = 2 * x15 * x53 * x8;
	FLT x74 = 4 * curve_scale * x15 * x59 * x8;
	FLT x75 = 2 * x61 * x8;
	FLT x76 = 2 * x15 * x8;
	FLT x77 = 2 * gibMag_0 * gib_scale * x71;
	FLT x78 = x44 * x8;
	FLT x79 = 2 * x62 * x8;
	FLT x80 = x18 * x67 + x69 * x79;
	FLT x81 = x18 * x53;
	FLT x82 = 2 * curve_scale * x18 * x59;
	FLT x83 = 2 * x3 * x45;
	FLT x84 = obj_qj * x26;
	FLT x85 = sensor_x * x84;
	FLT x86 = obj_qi * x26;
	FLT x87 = sensor_y * x86;
	FLT x88 = sensor_z * x24;
	FLT x89 = 1.0 / x26;
	FLT x90 = obj_qw * x89;
	FLT x91 = -x41 * x90 - x42 * x90 + x85 - x87 + x88 * x90;
	FLT x92 = 2 * x8 * x91;
	FLT x93 = obj_qk * x26;
	FLT x94 = sensor_y * x93;
	FLT x95 = sensor_z * x84;
	FLT x96 = sensor_x * x31;
	FLT x97 = -x21 * x90 - x30 * x90 + x90 * x96 + x94 - x95;
	FLT x98 = 2 * x8 * x97;
	FLT x99 = sensor_x * x93;
	FLT x100 = sensor_z * x86;
	FLT x101 = sensor_y * x38;
	FLT x102 = -x100 - x101 * x90 + x34 * x90 + x37 * x90 + x99;
	FLT x103 = x102 * x49 + x2 * x98 + x47 * x92;
	FLT x104 = 4 * curve_0 * curve_scale * x51 * x53;
	FLT x105 = -x102 * x76 + x11 * x98 - x18 * x91;
	FLT x106 = 2 * x105 * x53;
	FLT x107 = 4 * curve_scale * x105 * x59;
	FLT x108 = x102 * x75 - x62 * x92 + x63 * x97;
	FLT x109 = x108 * x69;
	FLT x110 = x105 * x67;
	FLT x111 = sensor_y * x84;
	FLT x112 = sensor_z * x93;
	FLT x113 = obj_qi * x89;
	FLT x114 = -x111 - x112 - x113 * x21 - x113 * x30 + x113 * x96;
	FLT x115 = 2 * x114 * x8;
	FLT x116 = obj_qw * x26;
	FLT x117 = sensor_y * x116;
	FLT x118 = obj_qi * x27;
	FLT x119 = -sensor_z * (x113 * x24 + x118) + x113 * x41 + x113 * x42 + x117 + x99;
	FLT x120 = 2 * x119 * x8;
	FLT x121 = sensor_z * x116;
	FLT x122 = -sensor_y * (x113 * x38 + x118) + x113 * x34 + x113 * x37 - x121 + x85;
	FLT x123 = x115 * x2 - x120 * x47 + x122 * x49;
	FLT x124 = x11 * x115 + x119 * x18 - x122 * x76;
	FLT x125 = 2 * x124 * x53;
	FLT x126 = 4 * curve_0 * curve_scale * x57 * x59;
	FLT x127 = x114 * x63 + x120 * x62 + x122 * x75;
	FLT x128 = x127 * x69;
	FLT x129 = x124 * x67;
	FLT x130 = sensor_x * x86;
	FLT x131 = obj_qj * x89;
	FLT x132 = -x101 * x131 + x112 + x130 + x131 * x34 + x131 * x37;
	FLT x133 = obj_qj * x27;
	FLT x134 = -sensor_x * (x131 * x31 + x133) + x121 + x131 * x21 + x131 * x30 + x87;
	FLT x135 = 2 * x134 * x8;
	FLT x136 = sensor_x * x116;
	FLT x137 = -sensor_z * (x131 * x24 + x133) + x131 * x41 + x131 * x42 - x136 + x94;
	FLT x138 = 2 * x137 * x8;
	FLT x139 = -x132 * x49 + x135 * x2 + x138 * x47;
	FLT x140 = x11 * x135 + x132 * x76 - x137 * x18;
	FLT x141 = 2 * x140 * x53;
	FLT x142 = x132 * x75 - x134 * x63 + x138 * x62;
	FLT x143 = x142 * x69;
	FLT x144 = x140 * x67;
	FLT x145 = obj_qk * x89;
	FLT x146 = x111 + x130 + x145 * x41 + x145 * x42 - x145 * x88;
	FLT x147 = 2 * x146 * x8;
	FLT x148 = obj_qk * x27;
	FLT x149 = -sensor_x * (x145 * x31 + x148) + x100 - x117 + x145 * x21 + x145 * x30;
	FLT x150 = 2 * x149 * x8;
	FLT x151 = -sensor_y * (x145 * x38 + x148) + x136 + x145 * x34 + x145 * x37 + x95;
	FLT x152 = x147 * x47 + x150 * x2 - x151 * x49;
	FLT x153 = x11 * x150 - x146 * x18 + x151 * x76;
	FLT x154 = 2 * x153 * x53;
	FLT x155 = x147 * x62 - x149 * x63 + x151 * x75;
	FLT x156 = x155 * x69;
	FLT x157 = x153 * x67;
	FLT x158 = tan(tilt_1 * tilt_scale);
	FLT x159 = x158 * x45;
	FLT x160 = x158 * x64;
	FLT x161 = curve_1 * x65;
	FLT x162 = 1.0 / (x52 + x57);
	FLT x163 = x11 * x162 * x51;
	FLT x164 = 2 * x44 * x8;
	FLT x165 = x162 * x2;
	FLT x166 = cos(gibPhase_1 + atan2(x51, x44));
	FLT x167 = 2 * gibMag_1 * gib_scale * x166;
	FLT x168 = 4 * curve_1 * curve_scale * x53 * x64 * x8;
	FLT x169 = x162 * x51;
	FLT x170 = x169 * x76;
	FLT x171 = x162 * x44;
	FLT x172 = x171 * x49;
	FLT x173 = gibMag_1 * gib_scale * x166;
	FLT x174 = x162 * x164 * x47 + x169 * x18;
	FLT x175 = 2 * x158 * x45;
	FLT x176 = 4 * curve_1 * curve_scale * x53 * x64;
	FLT x177 = x103 * x171;
	FLT x178 = x105 * x169;
	FLT x179 = 4 * curve_1 * curve_scale * x59 * x65;
	FLT x180 = x123 * x171;
	FLT x181 = x124 * x169;
	FLT x182 = x139 * x171;
	FLT x183 = x140 * x169;
	FLT x184 = x152 * x171;
	FLT x185 = x153 * x169;
	*(out++) = -x2 * x46 - x2 * x54 + x55 * x56 + x58 * x60 - x68 - x70 + x72 * (x68 + x70);
	*(out++) = 2 * curve_0 * curve_scale * x49 * x51 * x53 + x3 * x45 * x49 + x55 * x73 + x58 * x74 - x67 * x76 +
			   x69 * x75 - x77 * (-x15 * x67 * x8 + x61 * x66 * x78);
	*(out++) = -x46 * x47 - x47 * x54 - x55 * x81 - x58 * x82 - x72 * x80 + x80;
	*(out++) = x103 * x104 + x103 * x83 - x106 * x55 - x107 * x58 + 2 * x109 + 2 * x110 - x77 * (x109 + x110);
	*(out++) = x104 * x123 + x123 * x83 - x124 * x126 - x125 * x55 + 2 * x128 + 2 * x129 - x77 * (x128 + x129);
	*(out++) = -x104 * x139 + x126 * x140 - x139 * x83 + x141 * x55 + 2 * x143 - 2 * x144 - x77 * (x143 - x144);
	*(out++) = -x104 * x152 + x126 * x153 - x152 * x83 + x154 * x55 + 2 * x156 - 2 * x157 - x77 * (x156 - x157);
	*(out++) = 2 * curve_1 * curve_scale * x53 * x63 * x64 + x159 * x63 + x160 * x56 + x161 * x60 - x163 * x17 +
			   x164 * x165 - x167 * (-x163 * x8 + x165 * x78);
	*(out++) = -x159 * x75 + x160 * x73 + x161 * x74 - x168 * x61 - x170 - x172 + x173 * (x170 + x172);
	*(out++) = -x159 * x79 - x160 * x81 - x161 * x82 - x168 * x62 - x173 * x174 + x174;
	*(out++) = -x106 * x160 - x107 * x161 - x108 * x175 - x108 * x176 - x167 * (-x177 + x178) - 2 * x177 + 2 * x178;
	*(out++) = -x124 * x179 - x125 * x160 - x127 * x175 - x127 * x176 - x167 * (-x180 + x181) - 2 * x180 + 2 * x181;
	*(out++) = x140 * x179 + x141 * x160 - x142 * x175 - x142 * x176 - x167 * (x182 - x183) + 2 * x182 - 2 * x183;
	*(out++) = x153 * x179 + x154 * x160 - x155 * x175 - x155 * x176 - x167 * (x184 - x185) + 2 * x184 - 2 * x185;
}

static inline void gen_reproject_axis_x_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0,
												  FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0,
												  FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qj;
	FLT x1 = lh_qk * lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = tan(tilt_0 * tilt_scale);
	FLT x4 = pow(lh_qi, 2);
	FLT x5 = pow(lh_qj, 2);
	FLT x6 = x4 + x5;
	FLT x7 = pow(lh_qk, 2);
	FLT x8 = sqrt(pow(lh_qw, 2) + x6 + x7);
	FLT x9 = lh_qi * lh_qk;
	FLT x10 = lh_qj * lh_qw;
	FLT x11 = x10 + x9;
	FLT x12 = 2 * lh_px * x8;
	FLT x13 = lh_qj * lh_qk;
	FLT x14 = lh_qi * lh_qw;
	FLT x15 = x13 - x14;
	FLT x16 = 2 * lh_py * x8;
	FLT x17 = 2 * x8;
	FLT x18 = x17 * x6 - 1;
	FLT x19 = obj_qi * obj_qk;
	FLT x20 = obj_qj * obj_qw;
	FLT x21 = sensor_z * (x19 + x20);
	FLT x22 = pow(obj_qi, 2);
	FLT x23 = pow(obj_qj, 2);
	FLT x24 = x22 + x23;
	FLT x25 = pow(obj_qk, 2);
	FLT x26 = sqrt(pow(obj_qw, 2) + x24 + x25);
	FLT x27 = 2 * x26;
	FLT x28 = obj_qi * obj_qj;
	FLT x29 = obj_qk * obj_qw;
	FLT x30 = sensor_y * (x28 - x29);
	FLT x31 = x23 + x25;
	FLT x32 = obj_px - sensor_x * (x27 * x31 - 1) + x21 * x27 + x27 * x30;
	FLT x33 = 2 * x32 * x8;
	FLT x34 = sensor_x * (x28 + x29);
	FLT x35 = obj_qj * obj_qk;
	FLT x36 = obj_qi * obj_qw;
	FLT x37 = sensor_z * (x35 - x36);
	FLT x38 = x22 + x25;
	FLT x39 = obj_py - sensor_y * (x27 * x38 - 1) + x27 * x34 + x27 * x37;
	FLT x40 = 2 * x39 * x8;
	FLT x41 = sensor_y * (x35 + x36);
	FLT x42 = sensor_x * (x19 - x20);
	FLT x43 = obj_pz - sensor_z * (x24 * x27 - 1) + x27 * x41 + x27 * x42;
	FLT x44 = lh_pz * x18 - x11 * x12 + x11 * x33 - x15 * x16 + x15 * x40 - x18 * x43;
	FLT x45 = 1.0 / x44;
	FLT x46 = 2 * x3 * x45 * x8;
	FLT x47 = x13 + x14;
	FLT x48 = 2 * lh_pz * x8;
	FLT x49 = x17 * (x4 + x7) - 1;
	FLT x50 = 2 * x43 * x8;
	FLT x51 = lh_py * x49 - x12 * x2 + x2 * x33 - x39 * x49 - x47 * x48 + x47 * x50;
	FLT x52 = pow(x44, 2);
	FLT x53 = 1.0 / x52;
	FLT x54 = 4 * curve_0 * curve_scale * x51 * x53 * x8;
	FLT x55 = 2 * x11 * x8;
	FLT x56 = x3 * x51 * x53;
	FLT x57 = pow(x51, 2);
	FLT x58 = pow(x44, -3);
	FLT x59 = 4 * curve_0 * curve_scale * x57 * x58 * x8;
	FLT x60 = x0 + x1;
	FLT x61 = -x10 + x9;
	FLT x62 = x17 * (x5 + x7) - 1;
	FLT x63 = lh_px * x62 - x16 * x60 - x32 * x62 + x40 * x60 - x48 * x61 + x50 * x61;
	FLT x64 = 1.0 / (x52 + pow(x63, 2));
	FLT x65 = x63 * x64;
	FLT x66 = x55 * x65;
	FLT x67 = x44 * x64;
	FLT x68 = x62 * x67;
	FLT x69 = cos(gibPhase_0 + atan2(x63, x44));
	FLT x70 = gibMag_0 * gib_scale * x69;
	FLT x71 = 2 * x15 * x8;
	FLT x72 = 2 * x60 * x8;
	FLT x73 = 2 * gibMag_0 * gib_scale * x69;
	FLT x74 = x18 * x65 + 2 * x61 * x67 * x8;
	FLT x75 = 2 * x3 * x45;
	FLT x76 = obj_qj * x26;
	FLT x77 = sensor_x * x76;
	FLT x78 = obj_qi * x26;
	FLT x79 = sensor_y * x78;
	FLT x80 = sensor_z * x24;
	FLT x81 = 1.0 / x26;
	FLT x82 = obj_qw * x81;
	FLT x83 = -x41 * x82 - x42 * x82 + x77 - x79 + x80 * x82;
	FLT x84 = 2 * x8 * x83;
	FLT x85 = obj_qk * x26;
	FLT x86 = sensor_y * x85;
	FLT x87 = sensor_z * x76;
	FLT x88 = sensor_x * x31;
	FLT x89 = -x21 * x82 - x30 * x82 + x82 * x88 + x86 - x87;
	FLT x90 = 2 * x8 * x89;
	FLT x91 = sensor_x * x85;
	FLT x92 = sensor_z * x78;
	FLT x93 = sensor_y * x38;
	FLT x94 = x34 * x82 + x37 * x82 - x82 * x93 + x91 - x92;
	FLT x95 = x2 * x90 + x47 * x84 + x49 * x94;
	FLT x96 = 4 * curve_0 * curve_scale * x51 * x53;
	FLT x97 = x11 * x90 - x18 * x83 - x71 * x94;
	FLT x98 = 2 * x3 * x51 * x53;
	FLT x99 = 4 * curve_0 * curve_scale * x57 * x58;
	FLT x100 = x67 * (-x61 * x84 + x62 * x89 + x72 * x94);
	FLT x101 = x65 * x97;
	FLT x102 = sensor_y * x76;
	FLT x103 = sensor_z * x85;
	FLT x104 = obj_qi * x81;
	FLT x105 = -x102 - x103 - x104 * x21 - x104 * x30 + x104 * x88;
	FLT x106 = 2 * x105 * x8;
	FLT x107 = obj_qw * x26;
	FLT x108 = sensor_y * x107;
	FLT x109 = obj_qi * x27;
	FLT x110 = -sensor_z * (x104 * x24 + x109) + x104 * x41 + x104 * x42 + x108 + x91;
	FLT x111 = 2 * x110 * x8;
	FLT x112 = sensor_z * x107;
	FLT x113 = -sensor_y * (x104 * x38 + x109) + x104 * x34 + x104 * x37 - x112 + x77;
	FLT x114 = x106 * x2 - x111 * x47 + x113 * x49;
	FLT x115 = x106 * x11 + x110 * x18 - x113 * x71;
	FLT x116 = x67 * (x105 * x62 + x111 * x61 + x113 * x72);
	FLT x117 = x115 * x65;
	FLT x118 = sensor_x * x78;
	FLT x119 = obj_qj * x81;
	FLT x120 = x103 + x118 + x119 * x34 + x119 * x37 - x119 * x93;
	FLT x121 = obj_qj * x27;
	FLT x122 = -sensor_x * (x119 * x31 + x121) + x112 + x119 * x21 + x119 * x30 + x79;
	FLT x123 = 2 * x122 * x8;
	FLT x124 = sensor_x * x107;
	FLT x125 = -sensor_z * (x119 * x24 + x121) + x119 * x41 + x119 * x42 - x124 + x86;
	FLT x126 = 2 * x125 * x8;
	FLT x127 = -x120 * x49 + x123 * x2 + x126 * x47;
	FLT x128 = x11 * x123 + x120 * x71 - x125 * x18;
	FLT x129 = x67 * (x120 * x72 - x122 * x62 + x126 * x61);
	FLT x130 = x128 * x65;
	FLT x131 = obj_qk * x81;
	FLT x132 = x102 + x118 + x131 * x41 + x131 * x42 - x131 * x80;
	FLT x133 = 2 * x132 * x8;
	FLT x134 = obj_qk * x27;
	FLT x135 = -sensor_x * (x131 * x31 + x134) - x108 + x131 * x21 + x131 * x30 + x92;
	FLT x136 = 2 * x135 * x8;
	FLT x137 = -sensor_y * (x131 * x38 + x134) + x124 + x131 * x34 + x131 * x37 + x87;
	FLT x138 = x133 * x47 + x136 * x2 - x137 * x49;
	FLT x139 = x11 * x136 - x132 * x18 + x137 * x71;
	FLT x140 = x67 * (x133 * x61 - x135 * x62 + x137 * x72);
	FLT x141 = x139 * x65;
	*(out++) = x11 * x59 - x2 * x46 - x2 * x54 + x55 * x56 - x66 - x68 + x70 * (x66 + x68);
	*(out++) = 2 * curve_0 * curve_scale * x49 * x51 * x53 + x15 * x59 + x3 * x45 * x49 + x56 * x71 - x65 * x71 +
			   x67 * x72 - x73 * (-x15 * x65 * x8 + x60 * x67 * x8);
	*(out++) = -2 * curve_0 * curve_scale * x18 * x57 * x58 - x18 * x56 - x46 * x47 - x47 * x54 - x70 * x74 + x74;
	*(out++) = 2 * x100 + 2 * x101 - x73 * (x100 + x101) + x75 * x95 + x95 * x96 - x97 * x98 - x97 * x99;
	*(out++) = x114 * x75 + x114 * x96 - x115 * x98 - x115 * x99 + 2 * x116 + 2 * x117 - x73 * (x116 + x117);
	*(out++) = -x127 * x75 - x127 * x96 + x128 * x98 + x128 * x99 + 2 * x129 - 2 * x130 - x73 * (x129 - x130);
	*(out++) = -x138 * x75 - x138 * x96 + x139 * x98 + x139 * x99 + 2 * x140 - 2 * x141 - x73 * (x140 - x141);
}

static inline void gen_reproject_axis_y_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0,
												  FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0,
												  FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qj, 2);
	FLT x1 = pow(lh_qk, 2);
	FLT x2 = pow(lh_qi, 2);
	FLT x3 = x0 + x2;
	FLT x4 = sqrt(pow(lh_qw, 2) + x1 + x3);
	FLT x5 = 2 * x4;
	FLT x6 = x5 * (x0 + x1) - 1;
	FLT x7 = tan(tilt_0 * tilt_scale);
	FLT x8 = lh_qi * lh_qk;
	FLT x9 = lh_qj * lh_qw;
	FLT x10 = x8 + x9;
	FLT x11 = 2 * lh_px * x4;
	FLT x12 = lh_qj * lh_qk;
	FLT x13 = lh_qi * lh_qw;
	FLT x14 = x12 - x13;
	FLT x15 = 2 * lh_py * x4;
	FLT x16 = x3 * x5 - 1;
	FLT x17 = obj_qi * obj_qk;
	FLT x18 = obj_qj * obj_qw;
	FLT x19 = sensor_z * (x17 + x18);
	FLT x20 = pow(obj_qi, 2);
	FLT x21 = pow(obj_qj, 2);
	FLT x22 = x20 + x21;
	FLT x23 = pow(obj_qk, 2);
	FLT x24 = sqrt(pow(obj_qw, 2) + x22 + x23);
	FLT x25 = 2 * x24;
	FLT x26 = obj_qi * obj_qj;
	FLT x27 = obj_qk * obj_qw;
	FLT x28 = sensor_y * (x26 - x27);
	FLT x29 = x21 + x23;
	FLT x30 = obj_px - sensor_x * (x25 * x29 - 1) + x19 * x25 + x25 * x28;
	FLT x31 = 2 * x30 * x4;
	FLT x32 = sensor_x * (x26 + x27);
	FLT x33 = obj_qj * obj_qk;
	FLT x34 = obj_qi * obj_qw;
	FLT x35 = sensor_z * (x33 - x34);
	FLT x36 = x20 + x23;
	FLT x37 = obj_py - sensor_y * (x25 * x36 - 1) + x25 * x32 + x25 * x35;
	FLT x38 = 2 * x37 * x4;
	FLT x39 = sensor_y * (x33 + x34);
	FLT x40 = sensor_x * (x17 - x18);
	FLT x41 = obj_pz - sensor_z * (x22 * x25 - 1) + x25 * x39 + x25 * x40;
	FLT x42 = lh_pz * x16 - x10 * x11 + x10 * x31 - x14 * x15 + x14 * x38 - x16 * x41;
	FLT x43 = 1.0 / x42;
	FLT x44 = x43 * x7;
	FLT x45 = 2 * x10 * x4;
	FLT x46 = lh_qi * lh_qj;
	FLT x47 = lh_qk * lh_qw;
	FLT x48 = x46 + x47;
	FLT x49 = x8 - x9;
	FLT x50 = 2 * lh_pz * x4;
	FLT x51 = 2 * x4 * x41;
	FLT x52 = lh_px * x6 - x15 * x48 - x30 * x6 + x38 * x48 - x49 * x50 + x49 * x51;
	FLT x53 = pow(x42, 2);
	FLT x54 = 1.0 / x53;
	FLT x55 = x52 * x54 * x7;
	FLT x56 = pow(x52, 2);
	FLT x57 = pow(x42, -3);
	FLT x58 = 4 * curve_0 * curve_scale * x4 * x56 * x57;
	FLT x59 = x12 + x13;
	FLT x60 = x46 - x47;
	FLT x61 = x5 * (x1 + x2) - 1;
	FLT x62 = lh_py * x61 - x11 * x60 + x31 * x60 - x37 * x61 - x50 * x59 + x51 * x59;
	FLT x63 = 1.0 / (x53 + pow(x62, 2));
	FLT x64 = x62 * x63;
	FLT x65 = x42 * x60;
	FLT x66 = 2 * x4 * x63;
	FLT x67 = cos(gibPhase_0 + atan2(x62, x42));
	FLT x68 = 2 * gibMag_0 * gib_scale * x67;
	FLT x69 = x4 * x63;
	FLT x70 = 2 * x4 * x48;
	FLT x71 = 4 * curve_0 * curve_scale * x4 * x52 * x54;
	FLT x72 = 2 * x14 * x4;
	FLT x73 = x64 * x72;
	FLT x74 = x42 * x63;
	FLT x75 = x61 * x74;
	FLT x76 = gibMag_0 * gib_scale * x67;
	FLT x77 = x16 * x64 + x42 * x59 * x66;
	FLT x78 = 2 * x43 * x7;
	FLT x79 = obj_qk * x24;
	FLT x80 = sensor_x * x79;
	FLT x81 = obj_qi * x24;
	FLT x82 = sensor_z * x81;
	FLT x83 = 1.0 / x24;
	FLT x84 = obj_qw * x83;
	FLT x85 = sensor_y * x36;
	FLT x86 = x32 * x84 + x35 * x84 + x80 - x82 - x84 * x85;
	FLT x87 = obj_qj * x24;
	FLT x88 = sensor_x * x87;
	FLT x89 = sensor_y * x81;
	FLT x90 = sensor_z * x22;
	FLT x91 = -x39 * x84 - x40 * x84 + x84 * x90 + x88 - x89;
	FLT x92 = 2 * x4 * x91;
	FLT x93 = sensor_y * x79;
	FLT x94 = sensor_z * x87;
	FLT x95 = sensor_x * x29;
	FLT x96 = -x19 * x84 - x28 * x84 + x84 * x95 + x93 - x94;
	FLT x97 = -x49 * x92 + x6 * x96 + x70 * x86;
	FLT x98 = 4 * curve_0 * curve_scale * x52 * x54;
	FLT x99 = 2 * x4 * x96;
	FLT x100 = x10 * x99 - x16 * x91 - x72 * x86;
	FLT x101 = 2 * x52 * x54 * x7;
	FLT x102 = 4 * curve_0 * curve_scale * x56 * x57;
	FLT x103 = x74 * (x59 * x92 + x60 * x99 + x61 * x86);
	FLT x104 = x100 * x64;
	FLT x105 = sensor_y * x87;
	FLT x106 = sensor_z * x79;
	FLT x107 = obj_qi * x83;
	FLT x108 = -x105 - x106 - x107 * x19 - x107 * x28 + x107 * x95;
	FLT x109 = obj_qw * x24;
	FLT x110 = sensor_z * x109;
	FLT x111 = obj_qi * x25;
	FLT x112 = -sensor_y * (x107 * x36 + x111) + x107 * x32 + x107 * x35 - x110 + x88;
	FLT x113 = sensor_y * x109;
	FLT x114 = -sensor_z * (x107 * x22 + x111) + x107 * x39 + x107 * x40 + x113 + x80;
	FLT x115 = 2 * x114 * x4;
	FLT x116 = x108 * x6 + x112 * x70 + x115 * x49;
	FLT x117 = 2 * x108 * x4;
	FLT x118 = x10 * x117 - x112 * x72 + x114 * x16;
	FLT x119 = x74 * (x112 * x61 - x115 * x59 + x117 * x60);
	FLT x120 = x118 * x64;
	FLT x121 = sensor_x * x81;
	FLT x122 = obj_qj * x83;
	FLT x123 = x106 + x121 + x122 * x32 + x122 * x35 - x122 * x85;
	FLT x124 = sensor_x * x109;
	FLT x125 = obj_qj * x25;
	FLT x126 = -sensor_z * (x122 * x22 + x125) + x122 * x39 + x122 * x40 - x124 + x93;
	FLT x127 = 2 * x126 * x4;
	FLT x128 = -sensor_x * (x122 * x29 + x125) + x110 + x122 * x19 + x122 * x28 + x89;
	FLT x129 = x123 * x70 + x127 * x49 - x128 * x6;
	FLT x130 = 2 * x128 * x4;
	FLT x131 = x10 * x130 + x123 * x72 - x126 * x16;
	FLT x132 = x74 * (-x123 * x61 + x127 * x59 + x130 * x60);
	FLT x133 = x131 * x64;
	FLT x134 = obj_qk * x83;
	FLT x135 = x105 + x121 + x134 * x39 + x134 * x40 - x134 * x90;
	FLT x136 = 2 * x135 * x4;
	FLT x137 = obj_qk * x25;
	FLT x138 = -sensor_y * (x134 * x36 + x137) + x124 + x134 * x32 + x134 * x35 + x94;
	FLT x139 = -sensor_x * (x134 * x29 + x137) - x113 + x134 * x19 + x134 * x28 + x82;
	FLT x140 = x136 * x49 + x138 * x70 - x139 * x6;
	FLT x141 = 2 * x139 * x4;
	FLT x142 = x10 * x141 - x135 * x16 + x138 * x72;
	FLT x143 = x74 * (x136 * x59 - x138 * x61 + x141 * x60);
	FLT x144 = x142 * x64;
	*(out++) = 2 * curve_0 * curve_scale * x52 * x54 * x6 + x10 * x58 + x44 * x6 + x45 * x55 - x45 * x64 + x65 * x66 -
			   x68 * (-x10 * x62 * x69 + x65 * x69);
	*(out++) = x14 * x58 - x44 * x70 - x48 * x71 + x55 * x72 - x73 - x75 + x76 * (x73 + x75);
	*(out++) =
		-2 * curve_0 * curve_scale * x16 * x56 * x57 - x16 * x55 - 2 * x4 * x44 * x49 - x49 * x71 - x76 * x77 + x77;
	*(out++) = -x100 * x101 - x100 * x102 - 2 * x103 + 2 * x104 - x68 * (-x103 + x104) - x78 * x97 - x97 * x98;
	*(out++) = -x101 * x118 - x102 * x118 - x116 * x78 - x116 * x98 - 2 * x119 + 2 * x120 - x68 * (-x119 + x120);
	*(out++) = x101 * x131 + x102 * x131 - x129 * x78 - x129 * x98 + 2 * x132 - 2 * x133 - x68 * (x132 - x133);
	*(out++) = x101 * x142 + x102 * x142 - x140 * x78 - x140 * x98 + 2 * x143 - 2 * x144 - x68 * (x143 - x144);
}
