 // NOTE: Auto-generated code; see tools/generate_reprojection_functions 
#include <math.h>
 static inline void gen_reproject_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_0,
											FLT phase_1, FLT tilt_0, FLT tilt_1, FLT curve_0, FLT curve_1,
											FLT gibPhase_0, FLT gibPhase_1, FLT gibMag_0, FLT gibMag_1) {
	 FLT obj_px = *(obj++);
	 FLT obj_py = *(obj++);
	 FLT obj_pz = *(obj++);
	 FLT obj_qw = *(obj++);
	 FLT obj_qi = *(obj++);
	 FLT obj_qj = *(obj++);
	 FLT obj_qk = *(obj++);
	 FLT sensor_x = *(sensor++);
	 FLT sensor_y = *(sensor++);
	 FLT sensor_z = *(sensor++);
	 FLT lh_px = *(lh++);
	 FLT lh_py = *(lh++);
	 FLT lh_pz = *(lh++);
	 FLT lh_qw = *(lh++);
	 FLT lh_qi = *(lh++);
	 FLT lh_qj = *(lh++);
	 FLT lh_qk = *(lh++);
	 FLT x0 = lh_qi * lh_qk;
	 FLT x1 = lh_qj * lh_qw;
	 FLT x2 = x0 - x1;
	 FLT x3 = pow(lh_qi, 2);
	 FLT x4 = pow(lh_qj, 2);
	 FLT x5 = x3 + x4;
	 FLT x6 = pow(lh_qk, 2);
	 FLT x7 = sqrt(pow(lh_qw, 2) + x5 + x6);
	 FLT x8 = 2 * x2 * x7;
	 FLT x9 = x0 + x1;
	 FLT x10 = obj_qi * obj_qw;
	 FLT x11 = obj_qj * obj_qk;
	 FLT x12 = sensor_y * (x10 + x11);
	 FLT x13 = pow(obj_qi, 2);
	 FLT x14 = pow(obj_qj, 2);
	 FLT x15 = x13 + x14;
	 FLT x16 = pow(obj_qk, 2);
	 FLT x17 = sqrt(pow(obj_qw, 2) + x15 + x16);
	 FLT x18 = 2 * x17;
	 FLT x19 = obj_qi * obj_qk;
	 FLT x20 = obj_qj * obj_qw;
	 FLT x21 = sensor_x * (x19 - x20);
	 FLT x22 = obj_pz - sensor_z * (x15 * x18 - 1) + x12 * x18 + x18 * x21;
	 FLT x23 = 2 * x22 * x7;
	 FLT x24 = lh_qi * lh_qj;
	 FLT x25 = lh_qk * lh_qw;
	 FLT x26 = x24 - x25;
	 FLT x27 = obj_qi * obj_qj;
	 FLT x28 = obj_qk * obj_qw;
	 FLT x29 = sensor_x * (x27 + x28);
	 FLT x30 = sensor_z * (-x10 + x11);
	 FLT x31 = x13 + x16;
	 FLT x32 = obj_py - sensor_y * (x18 * x31 - 1) + x18 * x29 + x18 * x30;
	 FLT x33 = 2 * x32 * x7;
	 FLT x34 = 2 * x7;
	 FLT x35 = x34 * (x4 + x6) - 1;
	 FLT x36 = sensor_z * (x19 + x20);
	 FLT x37 = sensor_y * (x27 - x28);
	 FLT x38 = x14 + x16;
	 FLT x39 = obj_px - sensor_x * (x18 * x38 - 1) + x18 * x36 + x18 * x37;
	 FLT x40 = lh_px + x23 * x9 + x26 * x33 - x35 * x39;
	 FLT x41 = pow(x40, 2);
	 FLT x42 = lh_qi * lh_qw;
	 FLT x43 = lh_qj * lh_qk;
	 FLT x44 = x42 + x43;
	 FLT x45 = x33 * x44;
	 FLT x46 = 2 * x39 * x7;
	 FLT x47 = x2 * x46;
	 FLT x48 = x34 * x5 - 1;
	 FLT x49 = x22 * x48;
	 FLT x50 = lh_pz + x45 + x47 - x49;
	 FLT x51 = pow(x50, 2);
	 FLT x52 = x41 + x51;
	 FLT x53 = 1.0 / x52;
	 FLT x54 = x40 * x53;
	 FLT x55 = x54 * x8;
	 FLT x56 = x50 * x53;
	 FLT x57 = x35 * x56;
	 FLT x58 = x24 + x25;
	 FLT x59 = x46 * x58;
	 FLT x60 = -x42 + x43;
	 FLT x61 = x23 * x60;
	 FLT x62 = x34 * (x3 + x6) - 1;
	 FLT x63 = x32 * x62;
	 FLT x64 = lh_py + x59 + x61 - x63;
	 FLT x65 = -lh_pz - x45 - x47 + x49;
	 FLT x66 = atan2(x64, x65);
	 FLT x67 = 4 * curve_0 * x66;
	 FLT x68 = pow(x64, 2);
	 FLT x69 = x51 + x68;
	 FLT x70 = 1.0 / x69;
	 FLT x71 = x50 * x70;
	 FLT x72 = x64 * x70;
	 FLT x73 = tan(tilt_0);
	 FLT x74 = pow(-x53 * x68 * pow(x73, 2) + 1, -1.0L / 2.0L);
	 FLT x75 = 2 * x58 * x7;
	 FLT x76 = x73 / sqrt(x52);
	 FLT x77 = x50 * x8;
	 FLT x78 = x64 * x73 / pow(x52, 3.0L / 2.0L);
	 FLT x79 = x74 * (x75 * x76 - x78 * (-x35 * x40 + x77));
	 FLT x80 = sin(gibPhase_0 - phase_0 - asin(x64 * x76) + atan2(x65, x40));
	 FLT x81 = gibMag_0 * x80;
	 FLT x82 = x55 + x57;
	 FLT x83 = 2 * x44 * x7;
	 FLT x84 = 2 * x26 * x7;
	 FLT x85 = x50 * x83;
	 FLT x86 = -x54 * x83 + x56 * x84 + x74 * (x62 * x76 + x78 * (2 * x26 * x40 * x7 + x85));
	 FLT x87 = 2 * curve_0 * x66;
	 FLT x88 = x62 * x71 + x72 * x83;
	 FLT x89 = 2 * x7 * x9;
	 FLT x90 = x48 * x54 + x56 * x89;
	 FLT x91 = 2 * x60 * x7;
	 FLT x92 = -x48 * x50;
	 FLT x93 = -x74 * (x76 * x91 - x78 * (x40 * x89 + x92)) + x90;
	 FLT x94 = x71 * x91;
	 FLT x95 = x48 * x72;
	 FLT x96 = x94 + x95;
	 FLT x97 = obj_qk * x17;
	 FLT x98 = sensor_x * x97;
	 FLT x99 = obj_qi * x17;
	 FLT x100 = sensor_z * x99;
	 FLT x101 = 1.0 / x17;
	 FLT x102 = obj_qw * x101;
	 FLT x103 = sensor_y * x31;
	 FLT x104 = -x100 - x102 * x103 + x102 * x29 + x102 * x30 + x98;
	 FLT x105 = 2 * x104 * x7;
	 FLT x106 = obj_qj * x17;
	 FLT x107 = sensor_x * x106;
	 FLT x108 = sensor_y * x99;
	 FLT x109 = sensor_z * x15;
	 FLT x110 = x102 * x109 - x102 * x12 - x102 * x21 + x107 - x108;
	 FLT x111 = 2 * x110 * x7;
	 FLT x112 = sensor_y * x97;
	 FLT x113 = sensor_z * x106;
	 FLT x114 = sensor_x * x38;
	 FLT x115 = x102 * x114 - x102 * x36 - x102 * x37 + x112 - x113;
	 FLT x116 = x105 * x26 - x111 * x9 + x115 * x35;
	 FLT x117 = x116 * x56;
	 FLT x118 = -x105 * x44 - x110 * x48 + x115 * x8;
	 FLT x119 = x118 * x54;
	 FLT x120 = x104 * x62 + x111 * x60 + x115 * x75;
	 FLT x121 = x120 * x71;
	 FLT x122 = x118 * x72;
	 FLT x123 = -x121 + x122;
	 FLT x124 = x118 * x50;
	 FLT x125 = x74 * (x120 * x76 + x78 * (x116 * x40 - x124));
	 FLT x126 = 2 * gibMag_0 * x80;
	 FLT x127 = x117 + x119;
	 FLT x128 = sensor_y * x106;
	 FLT x129 = sensor_z * x97;
	 FLT x130 = obj_qi * x101;
	 FLT x131 = x114 * x130 - x128 - x129 - x130 * x36 - x130 * x37;
	 FLT x132 = obj_qw * x17;
	 FLT x133 = sensor_y * x132;
	 FLT x134 = obj_qi * x18;
	 FLT x135 = -sensor_z * (x130 * x15 + x134) + x12 * x130 + x130 * x21 + x133 + x98;
	 FLT x136 = sensor_z * x132;
	 FLT x137 = -sensor_y * (x130 * x31 + x134) + x107 + x130 * x29 + x130 * x30 - x136;
	 FLT x138 = 2 * x137 * x7;
	 FLT x139 = x131 * x35 + x135 * x89 + x138 * x26;
	 FLT x140 = x139 * x56;
	 FLT x141 = x131 * x8 + x135 * x48 - x138 * x44;
	 FLT x142 = x141 * x54;
	 FLT x143 = x141 * x72;
	 FLT x144 = x131 * x75 - x135 * x91 + x137 * x62;
	 FLT x145 = x144 * x71;
	 FLT x146 = x143 - x145;
	 FLT x147 = x141 * x50;
	 FLT x148 = x74 * (x144 * x76 + x78 * (x139 * x40 - x147));
	 FLT x149 = x140 + x142;
	 FLT x150 = sensor_x * x99;
	 FLT x151 = obj_qj * x101;
	 FLT x152 = -x103 * x151 + x129 + x150 + x151 * x29 + x151 * x30;
	 FLT x153 = 2 * x152 * x7;
	 FLT x154 = sensor_x * x132;
	 FLT x155 = obj_qj * x18;
	 FLT x156 = -sensor_z * (x15 * x151 + x155) + x112 + x12 * x151 + x151 * x21 - x154;
	 FLT x157 = -sensor_x * (x151 * x38 + x155) + x108 + x136 + x151 * x36 + x151 * x37;
	 FLT x158 = x153 * x26 + x156 * x89 - x157 * x35;
	 FLT x159 = x158 * x56;
	 FLT x160 = x153 * x44 - x156 * x48 + x157 * x8;
	 FLT x161 = x160 * x54;
	 FLT x162 = -x152 * x62 + x156 * x91 + x157 * x75;
	 FLT x163 = x162 * x71;
	 FLT x164 = x160 * x72;
	 FLT x165 = x163 - x164;
	 FLT x166 = x160 * x50;
	 FLT x167 = x74 * (x162 * x76 - x78 * (x158 * x40 + x166));
	 FLT x168 = x159 - x161;
	 FLT x169 = obj_qk * x101;
	 FLT x170 = -x109 * x169 + x12 * x169 + x128 + x150 + x169 * x21;
	 FLT x171 = 2 * x170 * x7;
	 FLT x172 = obj_qk * x18;
	 FLT x173 = -sensor_y * (x169 * x31 + x172) + x113 + x154 + x169 * x29 + x169 * x30;
	 FLT x174 = 2 * x173 * x7;
	 FLT x175 = -sensor_x * (x169 * x38 + x172) + x100 - x133 + x169 * x36 + x169 * x37;
	 FLT x176 = x171 * x9 + x174 * x26 - x175 * x35;
	 FLT x177 = x176 * x56;
	 FLT x178 = -x170 * x48 + x174 * x44 + x175 * x8;
	 FLT x179 = x178 * x54;
	 FLT x180 = x171 * x60 - x173 * x62 + x175 * x75;
	 FLT x181 = x180 * x71;
	 FLT x182 = x178 * x72;
	 FLT x183 = x181 - x182;
	 FLT x184 = x178 * x50;
	 FLT x185 = x74 * (x180 * x76 - x78 * (x176 * x40 + x184));
	 FLT x186 = x177 - x179;
	 FLT x187 = x71 * x75;
	 FLT x188 = x72 * x8;
	 FLT x189 = atan2(x40, x65);
	 FLT x190 = 2 * curve_1 * x189;
	 FLT x191 = tan(tilt_1);
	 FLT x192 = pow(-pow(x191, 2) * x41 * x70 + 1, -1.0L / 2.0L);
	 FLT x193 = x191 / sqrt(x69);
	 FLT x194 = x191 * x40 / pow(x69, 3.0L / 2.0L);
	 FLT x195 = x192 * (x193 * x35 + x194 * (2 * x58 * x64 * x7 + x77));
	 FLT x196 = sin(gibPhase_1 - phase_1 - asin(x193 * x40) + atan2(x65, -lh_py - x59 - x61 + x63));
	 FLT x197 = gibMag_1 * x196;
	 FLT x198 = -x192 * (x193 * x84 - x194 * (-x62 * x64 + x85)) + x88;
	 FLT x199 = 4 * curve_1 * x189;
	 FLT x200 = x192 * (x193 * x89 - x194 * (x64 * x91 + x92));
	 FLT x201 = x192 * (x116 * x193 + x194 * (x120 * x64 + x124));
	 FLT x202 = 2 * gibMag_1 * x196;
	 FLT x203 = x192 * (x139 * x193 + x194 * (x144 * x64 + x147));
	 FLT x204 = x192 * (x158 * x193 - x194 * (x162 * x64 + x166));
	 FLT x205 = x192 * (x176 * x193 - x194 * (x180 * x64 + x184));
	 *(out++) = -x55 - x57 - x67 * (-x2 * x7 * x72 + x58 * x7 * x71) - x79 - x81 * (x79 + x82);
	 *(out++) = x81 * x86 + x86 + x87 * x88;
	 *(out++) = x81 * x93 - x87 * x96 + x93;
	 *(out++) = 2 * x117 + 2 * x119 - x123 * x67 + 2 * x125 + x126 * (x125 + x127);
	 *(out++) = x126 * (x148 + x149) + 2 * x140 + 2 * x142 - x146 * x67 + 2 * x148;
	 *(out++) = x126 * (-x167 + x168) + 2 * x159 - 2 * x161 - x165 * x67 - 2 * x167;
	 *(out++) = x126 * (-x185 + x186) + 2 * x177 - 2 * x179 - x183 * x67 - 2 * x185;
	 *(out++) = -x187 + x188 + x190 * x82 + x195 - x197 * (x187 - x188 - x195);
	 *(out++) = x197 * x198 + x198 - x199 * (x26 * x50 * x53 * x7 - x40 * x44 * x53 * x7);
	 *(out++) = -x190 * x90 - x197 * (x200 + x96) - x200 - x94 - x95;
	 *(out++) = 2 * x121 - 2 * x122 - x127 * x199 - 2 * x201 - x202 * (x123 + x201);
	 *(out++) = -2 * x143 + 2 * x145 - x149 * x199 - x202 * (x146 + x203) - 2 * x203;
	 *(out++) = -2 * x163 + 2 * x164 - x168 * x199 - x202 * (x165 + x204) - 2 * x204;
	 *(out++) = -2 * x181 + 2 * x182 - x186 * x199 - x202 * (x183 + x205) - 2 * x205;
}

static inline void gen_reproject_axis_x_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qk;
	FLT x1 = lh_qj * lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = x3 + x4;
	FLT x6 = pow(lh_qk, 2);
	FLT x7 = sqrt(pow(lh_qw, 2) + x5 + x6);
	FLT x8 = 2 * x2 * x7;
	FLT x9 = x0 + x1;
	FLT x10 = obj_qi * obj_qw;
	FLT x11 = obj_qj * obj_qk;
	FLT x12 = sensor_y * (x10 + x11);
	FLT x13 = pow(obj_qi, 2);
	FLT x14 = pow(obj_qj, 2);
	FLT x15 = x13 + x14;
	FLT x16 = pow(obj_qk, 2);
	FLT x17 = sqrt(pow(obj_qw, 2) + x15 + x16);
	FLT x18 = 2 * x17;
	FLT x19 = obj_qi * obj_qk;
	FLT x20 = obj_qj * obj_qw;
	FLT x21 = sensor_x * (x19 - x20);
	FLT x22 = obj_pz - sensor_z * (x15 * x18 - 1) + x12 * x18 + x18 * x21;
	FLT x23 = 2 * x22 * x7;
	FLT x24 = lh_qi * lh_qj;
	FLT x25 = lh_qk * lh_qw;
	FLT x26 = x24 - x25;
	FLT x27 = obj_qi * obj_qj;
	FLT x28 = obj_qk * obj_qw;
	FLT x29 = sensor_x * (x27 + x28);
	FLT x30 = sensor_z * (-x10 + x11);
	FLT x31 = x13 + x16;
	FLT x32 = obj_py - sensor_y * (x18 * x31 - 1) + x18 * x29 + x18 * x30;
	FLT x33 = 2 * x32 * x7;
	FLT x34 = 2 * x7;
	FLT x35 = x34 * (x4 + x6) - 1;
	FLT x36 = sensor_z * (x19 + x20);
	FLT x37 = sensor_y * (x27 - x28);
	FLT x38 = x14 + x16;
	FLT x39 = obj_px - sensor_x * (x18 * x38 - 1) + x18 * x36 + x18 * x37;
	FLT x40 = lh_px + x23 * x9 + x26 * x33 - x35 * x39;
	FLT x41 = lh_qi * lh_qw;
	FLT x42 = lh_qj * lh_qk;
	FLT x43 = x41 + x42;
	FLT x44 = x33 * x43;
	FLT x45 = 2 * x39 * x7;
	FLT x46 = x2 * x45;
	FLT x47 = x34 * x5 - 1;
	FLT x48 = x22 * x47;
	FLT x49 = lh_pz + x44 + x46 - x48;
	FLT x50 = pow(x49, 2);
	FLT x51 = pow(x40, 2) + x50;
	FLT x52 = 1.0 / x51;
	FLT x53 = x40 * x52;
	FLT x54 = x53 * x8;
	FLT x55 = x49 * x52;
	FLT x56 = x35 * x55;
	FLT x57 = x24 + x25;
	FLT x58 = -x41 + x42;
	FLT x59 = x34 * (x3 + x6) - 1;
	FLT x60 = lh_py + x23 * x58 - x32 * x59 + x45 * x57;
	FLT x61 = -lh_pz - x44 - x46 + x48;
	FLT x62 = atan2(x60, x61);
	FLT x63 = 4 * curve_0 * x62;
	FLT x64 = pow(x60, 2);
	FLT x65 = 1.0 / (x50 + x64);
	FLT x66 = x60 * x65;
	FLT x67 = tan(tilt_0);
	FLT x68 = pow(-x52 * x64 * pow(x67, 2) + 1, -1.0L / 2.0L);
	FLT x69 = 2 * x57 * x7;
	FLT x70 = x67 / sqrt(x51);
	FLT x71 = x60 * x67 / pow(x51, 3.0L / 2.0L);
	FLT x72 = x68 * (x69 * x70 - x71 * (-x35 * x40 + x49 * x8));
	FLT x73 = sin(gibPhase_0 - phase_0 - asin(x60 * x70) + atan2(x61, x40));
	FLT x74 = gibMag_0 * x73;
	FLT x75 = 2 * x43 * x7;
	FLT x76 = 2 * x26 * x55 * x7 - x53 * x75 + x68 * (x59 * x70 + x71 * (2 * x26 * x40 * x7 + 2 * x43 * x49 * x7));
	FLT x77 = 2 * curve_0 * x62;
	FLT x78 = x49 * x65;
	FLT x79 = 2 * x7 * x9;
	FLT x80 = 2 * x58 * x7;
	FLT x81 = x47 * x53 + x55 * x79 - x68 * (x70 * x80 - x71 * (x40 * x79 - x47 * x49));
	FLT x82 = obj_qk * x17;
	FLT x83 = sensor_x * x82;
	FLT x84 = obj_qi * x17;
	FLT x85 = sensor_z * x84;
	FLT x86 = 1.0 / x17;
	FLT x87 = obj_qw * x86;
	FLT x88 = sensor_y * x31;
	FLT x89 = x29 * x87 + x30 * x87 + x83 - x85 - x87 * x88;
	FLT x90 = 2 * x7 * x89;
	FLT x91 = obj_qj * x17;
	FLT x92 = sensor_x * x91;
	FLT x93 = sensor_y * x84;
	FLT x94 = sensor_z * x15;
	FLT x95 = -x12 * x87 - x21 * x87 + x87 * x94 + x92 - x93;
	FLT x96 = 2 * x7 * x95;
	FLT x97 = sensor_y * x82;
	FLT x98 = sensor_z * x91;
	FLT x99 = sensor_x * x38;
	FLT x100 = -x36 * x87 - x37 * x87 + x87 * x99 + x97 - x98;
	FLT x101 = x100 * x35 + x26 * x90 - x9 * x96;
	FLT x102 = x101 * x55;
	FLT x103 = x100 * x8 - x43 * x90 - x47 * x95;
	FLT x104 = x103 * x53;
	FLT x105 = x100 * x69 + x58 * x96 + x59 * x89;
	FLT x106 = x68 * (x105 * x70 + x71 * (x101 * x40 - x103 * x49));
	FLT x107 = 2 * gibMag_0 * x73;
	FLT x108 = sensor_y * x91;
	FLT x109 = sensor_z * x82;
	FLT x110 = obj_qi * x86;
	FLT x111 = -x108 - x109 - x110 * x36 - x110 * x37 + x110 * x99;
	FLT x112 = obj_qw * x17;
	FLT x113 = sensor_y * x112;
	FLT x114 = obj_qi * x18;
	FLT x115 = -sensor_z * (x110 * x15 + x114) + x110 * x12 + x110 * x21 + x113 + x83;
	FLT x116 = sensor_z * x112;
	FLT x117 = -sensor_y * (x110 * x31 + x114) + x110 * x29 + x110 * x30 - x116 + x92;
	FLT x118 = 2 * x117 * x7;
	FLT x119 = x111 * x35 + x115 * x79 + x118 * x26;
	FLT x120 = x119 * x55;
	FLT x121 = x111 * x8 + x115 * x47 - x118 * x43;
	FLT x122 = x121 * x53;
	FLT x123 = x111 * x69 - x115 * x80 + x117 * x59;
	FLT x124 = x68 * (x123 * x70 + x71 * (x119 * x40 - x121 * x49));
	FLT x125 = sensor_x * x84;
	FLT x126 = obj_qj * x86;
	FLT x127 = x109 + x125 + x126 * x29 + x126 * x30 - x126 * x88;
	FLT x128 = 2 * x127 * x7;
	FLT x129 = sensor_x * x112;
	FLT x130 = obj_qj * x18;
	FLT x131 = -sensor_z * (x126 * x15 + x130) + x12 * x126 + x126 * x21 - x129 + x97;
	FLT x132 = -sensor_x * (x126 * x38 + x130) + x116 + x126 * x36 + x126 * x37 + x93;
	FLT x133 = x128 * x26 + x131 * x79 - x132 * x35;
	FLT x134 = x133 * x55;
	FLT x135 = x128 * x43 - x131 * x47 + x132 * x8;
	FLT x136 = x135 * x53;
	FLT x137 = -x127 * x59 + x131 * x80 + x132 * x69;
	FLT x138 = x68 * (x137 * x70 - x71 * (x133 * x40 + x135 * x49));
	FLT x139 = obj_qk * x86;
	FLT x140 = x108 + x12 * x139 + x125 + x139 * x21 - x139 * x94;
	FLT x141 = 2 * x140 * x7;
	FLT x142 = obj_qk * x18;
	FLT x143 = -sensor_y * (x139 * x31 + x142) + x129 + x139 * x29 + x139 * x30 + x98;
	FLT x144 = 2 * x143 * x7;
	FLT x145 = -sensor_x * (x139 * x38 + x142) - x113 + x139 * x36 + x139 * x37 + x85;
	FLT x146 = x141 * x9 + x144 * x26 - x145 * x35;
	FLT x147 = x146 * x55;
	FLT x148 = -x140 * x47 + x144 * x43 + x145 * x8;
	FLT x149 = x148 * x53;
	FLT x150 = x141 * x58 - x143 * x59 + x145 * x69;
	FLT x151 = x68 * (x150 * x70 - x71 * (x146 * x40 + x148 * x49));
	*(out++) = -x54 - x56 - x63 * (-x2 * x66 * x7 + x49 * x57 * x65 * x7) - x72 - x74 * (x54 + x56 + x72);
	*(out++) = x74 * x76 + x76 + x77 * (x59 * x78 + x66 * x75);
	*(out++) = x74 * x81 - x77 * (x47 * x66 + x78 * x80) + x81;
	*(out++) = 2 * x102 + 2 * x104 + 2 * x106 + x107 * (x102 + x104 + x106) - x63 * (x103 * x66 - x105 * x78);
	*(out++) = x107 * (x120 + x122 + x124) + 2 * x120 + 2 * x122 + 2 * x124 - x63 * (x121 * x66 - x123 * x78);
	*(out++) = x107 * (x134 - x136 - x138) + 2 * x134 - 2 * x136 - 2 * x138 - x63 * (-x135 * x66 + x137 * x78);
	*(out++) = x107 * (x147 - x149 - x151) + 2 * x147 - 2 * x149 - 2 * x151 - x63 * (-x148 * x66 + x150 * x78);
}

static inline void gen_reproject_axis_y_jac_obj_p(FLT *out, const FLT *obj, const FLT *sensor, const FLT *lh,
												  FLT phase_0, FLT tilt_0, FLT curve_0, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi * lh_qj;
	FLT x1 = lh_qk * lh_qw;
	FLT x2 = x0 + x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = x3 + x4;
	FLT x6 = pow(lh_qk, 2);
	FLT x7 = sqrt(pow(lh_qw, 2) + x5 + x6);
	FLT x8 = 2 * x2 * x7;
	FLT x9 = lh_qi * lh_qw;
	FLT x10 = lh_qj * lh_qk;
	FLT x11 = x10 + x9;
	FLT x12 = obj_qi * obj_qj;
	FLT x13 = obj_qk * obj_qw;
	FLT x14 = sensor_x * (x12 + x13);
	FLT x15 = pow(obj_qi, 2);
	FLT x16 = pow(obj_qj, 2);
	FLT x17 = x15 + x16;
	FLT x18 = pow(obj_qk, 2);
	FLT x19 = sqrt(pow(obj_qw, 2) + x17 + x18);
	FLT x20 = 2 * x19;
	FLT x21 = obj_qj * obj_qk;
	FLT x22 = obj_qi * obj_qw;
	FLT x23 = sensor_z * (x21 - x22);
	FLT x24 = x15 + x18;
	FLT x25 = obj_py - sensor_y * (x20 * x24 - 1) + x14 * x20 + x20 * x23;
	FLT x26 = 2 * x25 * x7;
	FLT x27 = x11 * x26;
	FLT x28 = lh_qi * lh_qk;
	FLT x29 = lh_qj * lh_qw;
	FLT x30 = x28 - x29;
	FLT x31 = obj_qi * obj_qk;
	FLT x32 = obj_qj * obj_qw;
	FLT x33 = sensor_z * (x31 + x32);
	FLT x34 = sensor_y * (x12 - x13);
	FLT x35 = x16 + x18;
	FLT x36 = obj_px - sensor_x * (x20 * x35 - 1) + x20 * x33 + x20 * x34;
	FLT x37 = 2 * x36 * x7;
	FLT x38 = x30 * x37;
	FLT x39 = 2 * x7;
	FLT x40 = x39 * x5 - 1;
	FLT x41 = sensor_y * (x21 + x22);
	FLT x42 = sensor_x * (x31 - x32);
	FLT x43 = obj_pz - sensor_z * (x17 * x20 - 1) + x20 * x41 + x20 * x42;
	FLT x44 = x40 * x43;
	FLT x45 = lh_pz + x27 + x38 - x44;
	FLT x46 = x2 * x37;
	FLT x47 = x10 - x9;
	FLT x48 = 2 * x43 * x7;
	FLT x49 = x47 * x48;
	FLT x50 = x39 * (x3 + x6) - 1;
	FLT x51 = x25 * x50;
	FLT x52 = lh_py + x46 + x49 - x51;
	FLT x53 = pow(x45, 2);
	FLT x54 = pow(x52, 2) + x53;
	FLT x55 = 1.0 / x54;
	FLT x56 = x45 * x55;
	FLT x57 = x56 * x8;
	FLT x58 = 2 * x30 * x7;
	FLT x59 = x52 * x55;
	FLT x60 = x58 * x59;
	FLT x61 = x28 + x29;
	FLT x62 = x0 - x1;
	FLT x63 = x39 * (x4 + x6) - 1;
	FLT x64 = lh_px + x26 * x62 - x36 * x63 + x48 * x61;
	FLT x65 = -lh_pz - x27 - x38 + x44;
	FLT x66 = atan2(x64, x65);
	FLT x67 = 2 * curve_0 * x66;
	FLT x68 = pow(x64, 2);
	FLT x69 = 1.0 / (x53 + x68);
	FLT x70 = x64 * x69;
	FLT x71 = x45 * x69;
	FLT x72 = tan(tilt_0);
	FLT x73 = pow(-x55 * x68 * pow(x72, 2) + 1, -1.0L / 2.0L);
	FLT x74 = x72 / sqrt(x54);
	FLT x75 = x64 * x72 / pow(x54, 3.0L / 2.0L);
	FLT x76 = x73 * (x63 * x74 + x75 * (2 * x2 * x52 * x7 + 2 * x30 * x45 * x7));
	FLT x77 = sin(gibPhase_0 - phase_0 - asin(x64 * x74) + atan2(x65, -lh_py - x46 - x49 + x51));
	FLT x78 = gibMag_0 * x77;
	FLT x79 = 2 * x11 * x7;
	FLT x80 = x50 * x56 + x59 * x79 - x73 * (2 * x62 * x7 * x74 - x75 * (x45 * x79 - x50 * x52));
	FLT x81 = 4 * curve_0 * x66;
	FLT x82 = 2 * x47 * x7;
	FLT x83 = x56 * x82;
	FLT x84 = x40 * x59;
	FLT x85 = 2 * x61 * x7;
	FLT x86 = x73 * (x74 * x85 - x75 * (-x40 * x45 + x52 * x82));
	FLT x87 = obj_qk * x19;
	FLT x88 = sensor_y * x87;
	FLT x89 = obj_qj * x19;
	FLT x90 = sensor_z * x89;
	FLT x91 = sensor_x * x35;
	FLT x92 = 1.0 / x19;
	FLT x93 = obj_qw * x92;
	FLT x94 = -x33 * x93 - x34 * x93 + x88 - x90 + x91 * x93;
	FLT x95 = sensor_x * x89;
	FLT x96 = obj_qi * x19;
	FLT x97 = sensor_y * x96;
	FLT x98 = sensor_z * x17;
	FLT x99 = -x41 * x93 - x42 * x93 + x93 * x98 + x95 - x97;
	FLT x100 = 2 * x7 * x99;
	FLT x101 = sensor_x * x87;
	FLT x102 = sensor_z * x96;
	FLT x103 = sensor_y * x24;
	FLT x104 = x101 - x102 - x103 * x93 + x14 * x93 + x23 * x93;
	FLT x105 = x100 * x47 + x104 * x50 + x8 * x94;
	FLT x106 = x105 * x56;
	FLT x107 = 2 * x104 * x7;
	FLT x108 = -x107 * x11 - x40 * x99 + x58 * x94;
	FLT x109 = x108 * x59;
	FLT x110 = -x100 * x61 + x107 * x62 + x63 * x94;
	FLT x111 = x73 * (x110 * x74 + x75 * (x105 * x52 + x108 * x45));
	FLT x112 = 2 * gibMag_0 * x77;
	FLT x113 = sensor_y * x89;
	FLT x114 = sensor_z * x87;
	FLT x115 = obj_qi * x92;
	FLT x116 = -x113 - x114 - x115 * x33 - x115 * x34 + x115 * x91;
	FLT x117 = obj_qw * x19;
	FLT x118 = sensor_y * x117;
	FLT x119 = obj_qi * x20;
	FLT x120 = -sensor_z * (x115 * x17 + x119) + x101 + x115 * x41 + x115 * x42 + x118;
	FLT x121 = sensor_z * x117;
	FLT x122 = -sensor_y * (x115 * x24 + x119) + x115 * x14 + x115 * x23 - x121 + x95;
	FLT x123 = x116 * x8 - x120 * x82 + x122 * x50;
	FLT x124 = x123 * x56;
	FLT x125 = 2 * x122 * x7;
	FLT x126 = -x11 * x125 + x116 * x58 + x120 * x40;
	FLT x127 = x126 * x59;
	FLT x128 = x116 * x63 + x120 * x85 + x125 * x62;
	FLT x129 = x73 * (x128 * x74 + x75 * (x123 * x52 + x126 * x45));
	FLT x130 = sensor_x * x96;
	FLT x131 = obj_qj * x92;
	FLT x132 = -x103 * x131 + x114 + x130 + x131 * x14 + x131 * x23;
	FLT x133 = obj_qj * x20;
	FLT x134 = -sensor_x * (x131 * x35 + x133) + x121 + x131 * x33 + x131 * x34 + x97;
	FLT x135 = sensor_x * x117;
	FLT x136 = -sensor_z * (x131 * x17 + x133) + x131 * x41 + x131 * x42 - x135 + x88;
	FLT x137 = -x132 * x50 + x134 * x8 + x136 * x82;
	FLT x138 = x137 * x56;
	FLT x139 = 2 * x132 * x7;
	FLT x140 = x11 * x139 + x134 * x58 - x136 * x40;
	FLT x141 = x140 * x59;
	FLT x142 = -x134 * x63 + x136 * x85 + x139 * x62;
	FLT x143 = x73 * (x142 * x74 - x75 * (x137 * x52 + x140 * x45));
	FLT x144 = obj_qk * x92;
	FLT x145 = x113 + x130 + x144 * x41 + x144 * x42 - x144 * x98;
	FLT x146 = 2 * x145 * x7;
	FLT x147 = obj_qk * x20;
	FLT x148 = -sensor_x * (x144 * x35 + x147) + x102 - x118 + x144 * x33 + x144 * x34;
	FLT x149 = -sensor_y * (x144 * x24 + x147) + x135 + x14 * x144 + x144 * x23 + x90;
	FLT x150 = x146 * x47 + x148 * x8 - x149 * x50;
	FLT x151 = x150 * x56;
	FLT x152 = 2 * x149 * x7;
	FLT x153 = x11 * x152 - x145 * x40 + x148 * x58;
	FLT x154 = x153 * x59;
	FLT x155 = x146 * x61 - x148 * x63 + x152 * x62;
	FLT x156 = x73 * (x155 * x74 - x75 * (x150 * x52 + x153 * x45));
	*(out++) = -x57 + x60 + x67 * (x58 * x70 + x63 * x71) + x76 - x78 * (x57 - x60 - x76);
	*(out++) = x78 * x80 + x80 - x81 * (-x11 * x7 * x70 + x45 * x62 * x69 * x7);
	*(out++) = -x67 * (x40 * x70 + x71 * x85) - x78 * (x83 + x84 + x86) - x83 - x84 - x86;
	*(out++) = 2 * x106 - 2 * x109 - 2 * x111 - x112 * (-x106 + x109 + x111) - x81 * (x108 * x70 + x110 * x71);
	*(out++) = -x112 * (-x124 + x127 + x129) + 2 * x124 - 2 * x127 - 2 * x129 - x81 * (x126 * x70 + x128 * x71);
	*(out++) = -x112 * (x138 - x141 + x143) - 2 * x138 + 2 * x141 - 2 * x143 - x81 * (-x140 * x70 + x142 * x71);
	*(out++) = -x112 * (x151 - x154 + x156) - 2 * x151 + 2 * x154 - 2 * x156 - x81 * (-x153 * x70 + x155 * x71);
}

