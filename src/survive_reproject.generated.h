 // NOTE: Auto-generated code; see tools/generate_reprojection_functions 
#include <math.h>
static inline void gen_reproject_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT phase_1, FLT tilt_scale, FLT tilt_0, FLT tilt_1, FLT curve_scale, FLT curve_0, FLT curve_1, FLT gib_scale, FLT gibPhase_0, FLT gibPhase_1, FLT gibMag_0, FLT gibMag_1) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi*lh_qj;
	FLT x1 = lh_qk*lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = tan(tilt_0*tilt_scale);
	FLT x4 = pow(lh_qi, 2);
	FLT x5 = pow(lh_qj, 2);
	FLT x6 = x4 + x5;
	FLT x7 = pow(lh_qk, 2);
	FLT x8 = sqrt(pow(lh_qw, 2) + x6 + x7);
	FLT x9 = lh_qi*lh_qk;
	FLT x10 = lh_qj*lh_qw;
	FLT x11 = x10 + x9;
	FLT x12 = 2*lh_px*x8;
	FLT x13 = x11*x12;
	FLT x14 = lh_qj*lh_qk;
	FLT x15 = lh_qi*lh_qw;
	FLT x16 = x14 - x15;
	FLT x17 = 2*lh_py*x8;
	FLT x18 = x16*x17;
	FLT x19 = 2*x8;
	FLT x20 = x19*x6 - 1;
	FLT x21 = lh_pz*x20;
	FLT x22 = obj_qi*obj_qk;
	FLT x23 = obj_qj*obj_qw;
	FLT x24 = sensor_z*(x22 + x23);
	FLT x25 = pow(obj_qi, 2);
	FLT x26 = pow(obj_qj, 2);
	FLT x27 = x25 + x26;
	FLT x28 = pow(obj_qk, 2);
	FLT x29 = sqrt(pow(obj_qw, 2) + x27 + x28);
	FLT x30 = 2*x29;
	FLT x31 = obj_qi*obj_qj;
	FLT x32 = obj_qk*obj_qw;
	FLT x33 = sensor_y*(x31 - x32);
	FLT x34 = x26 + x28;
	FLT x35 = obj_px - sensor_x*(x30*x34 - 1) + x24*x30 + x30*x33;
	FLT x36 = 2*x35*x8;
	FLT x37 = x11*x36;
	FLT x38 = sensor_x*(x31 + x32);
	FLT x39 = obj_qj*obj_qk;
	FLT x40 = obj_qi*obj_qw;
	FLT x41 = sensor_z*(x39 - x40);
	FLT x42 = x25 + x28;
	FLT x43 = obj_py - sensor_y*(x30*x42 - 1) + x30*x38 + x30*x41;
	FLT x44 = 2*x43*x8;
	FLT x45 = x16*x44;
	FLT x46 = sensor_y*(x39 + x40);
	FLT x47 = sensor_x*(x22 - x23);
	FLT x48 = obj_pz - sensor_z*(x27*x30 - 1) + x30*x46 + x30*x47;
	FLT x49 = x20*x48;
	FLT x50 = -x13 - x18 + x21 + x37 + x45 - x49;
	FLT x51 = 1.0/x50;
	FLT x52 = 2*x3*x51*x8;
	FLT x53 = x14 + x15;
	FLT x54 = 2*lh_pz*x8;
	FLT x55 = x19*(x4 + x7) - 1;
	FLT x56 = 2*x48*x8;
	FLT x57 = lh_py*x55 - x12*x2 + x2*x36 - x43*x55 - x53*x54 + x53*x56;
	FLT x58 = pow(x50, 2);
	FLT x59 = 1.0/x58;
	FLT x60 = 4*curve_0*curve_scale*x57*x59*x8;
	FLT x61 = x3*x57;
	FLT x62 = 2*x11*x59*x8;
	FLT x63 = pow(x57, 2);
	FLT x64 = curve_0*x63;
	FLT x65 = pow(x50, -3);
	FLT x66 = 4*curve_scale*x11*x65*x8;
	FLT x67 = x0 + x1;
	FLT x68 = x17*x67;
	FLT x69 = -x10 + x9;
	FLT x70 = x54*x69;
	FLT x71 = x19*(x5 + x7) - 1;
	FLT x72 = lh_px*x71;
	FLT x73 = x44*x67;
	FLT x74 = x56*x69;
	FLT x75 = x35*x71;
	FLT x76 = -x68 - x70 + x72 + x73 + x74 - x75;
	FLT x77 = pow(x76, 2);
	FLT x78 = 1.0/(x58 + x77);
	FLT x79 = x76*x78;
	FLT x80 = 2*x11*x79*x8;
	FLT x81 = x50*x78;
	FLT x82 = x71*x81;
	FLT x83 = x13 + x18 - x21 - x37 - x45 + x49;
	FLT x84 = cos(gibPhase_0 + atan2(x68 + x70 - x72 - x73 - x74 + x75, x83));
	FLT x85 = gibMag_0*gib_scale*x84;
	FLT x86 = 2*x16*x59*x8;
	FLT x87 = 4*curve_scale*x16*x65*x8;
	FLT x88 = 2*x67*x8;
	FLT x89 = 2*x16*x8;
	FLT x90 = 2*gibMag_0*gib_scale*x84;
	FLT x91 = x50*x8;
	FLT x92 = 2*x69*x8;
	FLT x93 = x20*x79 + x81*x92;
	FLT x94 = x20*x59;
	FLT x95 = 2*curve_scale*x20*x65;
	FLT x96 = 2*x3*x51;
	FLT x97 = obj_qj*x29;
	FLT x98 = sensor_x*x97;
	FLT x99 = obj_qi*x29;
	FLT x100 = sensor_y*x99;
	FLT x101 = sensor_z*x27;
	FLT x102 = 1.0/x29;
	FLT x103 = obj_qw*x102;
	FLT x104 = -x100 + x101*x103 - x103*x46 - x103*x47 + x98;
	FLT x105 = 2*x104*x8;
	FLT x106 = obj_qk*x29;
	FLT x107 = sensor_y*x106;
	FLT x108 = sensor_z*x97;
	FLT x109 = sensor_x*x34;
	FLT x110 = x103*x109 - x103*x24 - x103*x33 + x107 - x108;
	FLT x111 = 2*x110*x8;
	FLT x112 = sensor_x*x106;
	FLT x113 = sensor_z*x99;
	FLT x114 = sensor_y*x42;
	FLT x115 = -x103*x114 + x103*x38 + x103*x41 + x112 - x113;
	FLT x116 = x105*x53 + x111*x2 + x115*x55;
	FLT x117 = 4*curve_0*curve_scale*x57*x59;
	FLT x118 = -x104*x20 + x11*x111 - x115*x89;
	FLT x119 = 2*x118*x59;
	FLT x120 = 4*curve_scale*x118*x65;
	FLT x121 = -x105*x69 + x110*x71 + x115*x88;
	FLT x122 = x121*x81;
	FLT x123 = x118*x79;
	FLT x124 = sensor_y*x97;
	FLT x125 = sensor_z*x106;
	FLT x126 = obj_qi*x102;
	FLT x127 = x109*x126 - x124 - x125 - x126*x24 - x126*x33;
	FLT x128 = 2*x127*x8;
	FLT x129 = obj_qw*x29;
	FLT x130 = sensor_y*x129;
	FLT x131 = obj_qi*x30;
	FLT x132 = -sensor_z*(x126*x27 + x131) + x112 + x126*x46 + x126*x47 + x130;
	FLT x133 = 2*x132*x8;
	FLT x134 = sensor_z*x129;
	FLT x135 = -sensor_y*(x126*x42 + x131) + x126*x38 + x126*x41 - x134 + x98;
	FLT x136 = x128*x2 - x133*x53 + x135*x55;
	FLT x137 = x11*x128 + x132*x20 - x135*x89;
	FLT x138 = 2*x137*x59;
	FLT x139 = 4*curve_0*curve_scale*x63*x65;
	FLT x140 = x127*x71 + x133*x69 + x135*x88;
	FLT x141 = x140*x81;
	FLT x142 = x137*x79;
	FLT x143 = sensor_x*x99;
	FLT x144 = obj_qj*x102;
	FLT x145 = -x114*x144 + x125 + x143 + x144*x38 + x144*x41;
	FLT x146 = obj_qj*x30;
	FLT x147 = -sensor_x*(x144*x34 + x146) + x100 + x134 + x144*x24 + x144*x33;
	FLT x148 = 2*x147*x8;
	FLT x149 = sensor_x*x129;
	FLT x150 = -sensor_z*(x144*x27 + x146) + x107 + x144*x46 + x144*x47 - x149;
	FLT x151 = 2*x150*x8;
	FLT x152 = -x145*x55 + x148*x2 + x151*x53;
	FLT x153 = x11*x148 + x145*x89 - x150*x20;
	FLT x154 = 2*x153*x59;
	FLT x155 = x145*x88 - x147*x71 + x151*x69;
	FLT x156 = x155*x81;
	FLT x157 = x153*x79;
	FLT x158 = obj_qk*x102;
	FLT x159 = -x101*x158 + x124 + x143 + x158*x46 + x158*x47;
	FLT x160 = 2*x159*x8;
	FLT x161 = obj_qk*x30;
	FLT x162 = -sensor_x*(x158*x34 + x161) + x113 - x130 + x158*x24 + x158*x33;
	FLT x163 = 2*x162*x8;
	FLT x164 = -sensor_y*(x158*x42 + x161) + x108 + x149 + x158*x38 + x158*x41;
	FLT x165 = x160*x53 + x163*x2 - x164*x55;
	FLT x166 = x11*x163 - x159*x20 + x164*x89;
	FLT x167 = 2*x166*x59;
	FLT x168 = x160*x69 - x162*x71 + x164*x88;
	FLT x169 = x168*x81;
	FLT x170 = x166*x79;
	FLT x171 = tan(tilt_1*tilt_scale);
	FLT x172 = x171*x51;
	FLT x173 = x171*x76;
	FLT x174 = curve_1*x77;
	FLT x175 = 1.0/(x58 + x63);
	FLT x176 = x11*x175*x57;
	FLT x177 = 2*x50*x8;
	FLT x178 = x175*x2;
	FLT x179 = cos(gibPhase_1 + atan2(x57, x83));
	FLT x180 = 2*gibMag_1*gib_scale*x179;
	FLT x181 = x175*x57;
	FLT x182 = x175*x50;
	FLT x183 = x181*x89 + x182*x55;
	FLT x184 = 4*curve_1*curve_scale*x59*x76*x8;
	FLT x185 = gibMag_1*gib_scale*x179;
	FLT x186 = x175*x177*x53;
	FLT x187 = x181*x20;
	FLT x188 = 2*x171*x51;
	FLT x189 = 4*curve_1*curve_scale*x59*x76;
	FLT x190 = x116*x182;
	FLT x191 = x118*x181;
	FLT x192 = 4*curve_1*curve_scale*x65*x77;
	FLT x193 = x136*x182;
	FLT x194 = x137*x181;
	FLT x195 = x152*x182;
	FLT x196 = x153*x181;
	FLT x197 = x165*x182;
	FLT x198 = x166*x181;
	*(out++) = x2*x52 - x2*x60 - x61*x62 + x64*x66 - x80 - x82 + x85*(x80 + x82);
	*(out++) = 2*curve_0*curve_scale*x55*x57*x59 - x3*x51*x55 - x61*x86 + x64*x87 - x79*x89 + x81*x88 - x90*(-x16*x79*x8 + x67*x78*x91);
	*(out++) = x52*x53 - x53*x60 + x61*x94 - x64*x95 - x85*x93 + x93;
	*(out++) = x116*x117 - x116*x96 + x119*x61 - x120*x64 + 2*x122 + 2*x123 - x90*(x122 + x123);
	*(out++) = x117*x136 - x136*x96 - x137*x139 + x138*x61 + 2*x141 + 2*x142 - x90*(x141 + x142);
	*(out++) = -x117*x152 + x139*x153 + x152*x96 - x154*x61 + 2*x156 - 2*x157 - x90*(x156 - x157);
	*(out++) = -x117*x165 + x139*x166 + x165*x96 - x167*x61 + 2*x169 - 2*x170 - x90*(x169 - x170);
	*(out++) = 2*curve_1*curve_scale*x59*x71*x76 + x172*x71 + x173*x62 + x174*x66 + x176*x19 - x177*x178 + x180*(-x176*x8 + x178*x91);
	*(out++) = -x172*x88 + x173*x86 + x174*x87 - x183*x185 + x183 - x184*x67;
	*(out++) = -x172*x92 - x173*x94 - x174*x95 - x184*x69 + x185*(x186 + x187) - x186 - x187;
	*(out++) = -x119*x173 - x120*x174 - x121*x188 - x121*x189 + x180*(-x190 + x191) + 2*x190 - 2*x191;
	*(out++) = -x137*x192 - x138*x173 - x140*x188 - x140*x189 + x180*(-x193 + x194) + 2*x193 - 2*x194;
	*(out++) = x153*x192 + x154*x173 - x155*x188 - x155*x189 + x180*(x195 - x196) - 2*x195 + 2*x196;
	*(out++) = x166*x192 + x167*x173 - x168*x188 - x168*x189 + x180*(x197 - x198) - 2*x197 + 2*x198;
}

static inline void gen_reproject_axis_x_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0, FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi*lh_qj;
	FLT x1 = lh_qk*lh_qw;
	FLT x2 = x0 - x1;
	FLT x3 = tan(tilt_0*tilt_scale);
	FLT x4 = pow(lh_qi, 2);
	FLT x5 = pow(lh_qj, 2);
	FLT x6 = x4 + x5;
	FLT x7 = pow(lh_qk, 2);
	FLT x8 = sqrt(pow(lh_qw, 2) + x6 + x7);
	FLT x9 = lh_qi*lh_qk;
	FLT x10 = lh_qj*lh_qw;
	FLT x11 = x10 + x9;
	FLT x12 = 2*lh_px*x8;
	FLT x13 = x11*x12;
	FLT x14 = lh_qj*lh_qk;
	FLT x15 = lh_qi*lh_qw;
	FLT x16 = x14 - x15;
	FLT x17 = 2*lh_py*x8;
	FLT x18 = x16*x17;
	FLT x19 = 2*x8;
	FLT x20 = x19*x6 - 1;
	FLT x21 = lh_pz*x20;
	FLT x22 = obj_qi*obj_qk;
	FLT x23 = obj_qj*obj_qw;
	FLT x24 = sensor_z*(x22 + x23);
	FLT x25 = pow(obj_qi, 2);
	FLT x26 = pow(obj_qj, 2);
	FLT x27 = x25 + x26;
	FLT x28 = pow(obj_qk, 2);
	FLT x29 = sqrt(pow(obj_qw, 2) + x27 + x28);
	FLT x30 = 2*x29;
	FLT x31 = obj_qi*obj_qj;
	FLT x32 = obj_qk*obj_qw;
	FLT x33 = sensor_y*(x31 - x32);
	FLT x34 = x26 + x28;
	FLT x35 = obj_px - sensor_x*(x30*x34 - 1) + x24*x30 + x30*x33;
	FLT x36 = 2*x35*x8;
	FLT x37 = x11*x36;
	FLT x38 = sensor_x*(x31 + x32);
	FLT x39 = obj_qj*obj_qk;
	FLT x40 = obj_qi*obj_qw;
	FLT x41 = sensor_z*(x39 - x40);
	FLT x42 = x25 + x28;
	FLT x43 = obj_py - sensor_y*(x30*x42 - 1) + x30*x38 + x30*x41;
	FLT x44 = 2*x43*x8;
	FLT x45 = x16*x44;
	FLT x46 = sensor_y*(x39 + x40);
	FLT x47 = sensor_x*(x22 - x23);
	FLT x48 = obj_pz - sensor_z*(x27*x30 - 1) + x30*x46 + x30*x47;
	FLT x49 = x20*x48;
	FLT x50 = -x13 - x18 + x21 + x37 + x45 - x49;
	FLT x51 = 1.0/x50;
	FLT x52 = 2*x3*x51*x8;
	FLT x53 = x14 + x15;
	FLT x54 = 2*lh_pz*x8;
	FLT x55 = x19*(x4 + x7) - 1;
	FLT x56 = 2*x48*x8;
	FLT x57 = lh_py*x55 - x12*x2 + x2*x36 - x43*x55 - x53*x54 + x53*x56;
	FLT x58 = pow(x50, 2);
	FLT x59 = 1.0/x58;
	FLT x60 = 4*curve_0*curve_scale*x57*x59*x8;
	FLT x61 = 2*x11*x8;
	FLT x62 = x3*x57*x59;
	FLT x63 = pow(x57, 2);
	FLT x64 = pow(x50, -3);
	FLT x65 = 4*curve_0*curve_scale*x63*x64*x8;
	FLT x66 = x0 + x1;
	FLT x67 = x17*x66;
	FLT x68 = -x10 + x9;
	FLT x69 = x54*x68;
	FLT x70 = x19*(x5 + x7) - 1;
	FLT x71 = lh_px*x70;
	FLT x72 = x44*x66;
	FLT x73 = x56*x68;
	FLT x74 = x35*x70;
	FLT x75 = -x67 - x69 + x71 + x72 + x73 - x74;
	FLT x76 = 1.0/(x58 + pow(x75, 2));
	FLT x77 = x75*x76;
	FLT x78 = x61*x77;
	FLT x79 = x50*x76;
	FLT x80 = x70*x79;
	FLT x81 = cos(gibPhase_0 + atan2(x67 + x69 - x71 - x72 - x73 + x74, x13 + x18 - x21 - x37 - x45 + x49));
	FLT x82 = gibMag_0*gib_scale*x81;
	FLT x83 = 2*x16*x8;
	FLT x84 = 2*x66*x8;
	FLT x85 = 2*gibMag_0*gib_scale*x81;
	FLT x86 = x20*x77 + 2*x68*x79*x8;
	FLT x87 = 2*x3*x51;
	FLT x88 = obj_qj*x29;
	FLT x89 = sensor_x*x88;
	FLT x90 = obj_qi*x29;
	FLT x91 = sensor_y*x90;
	FLT x92 = sensor_z*x27;
	FLT x93 = 1.0/x29;
	FLT x94 = obj_qw*x93;
	FLT x95 = -x46*x94 - x47*x94 + x89 - x91 + x92*x94;
	FLT x96 = 2*x8*x95;
	FLT x97 = obj_qk*x29;
	FLT x98 = sensor_y*x97;
	FLT x99 = sensor_z*x88;
	FLT x100 = sensor_x*x34;
	FLT x101 = x100*x94 - x24*x94 - x33*x94 + x98 - x99;
	FLT x102 = 2*x101*x8;
	FLT x103 = sensor_x*x97;
	FLT x104 = sensor_z*x90;
	FLT x105 = sensor_y*x42;
	FLT x106 = x103 - x104 - x105*x94 + x38*x94 + x41*x94;
	FLT x107 = x102*x2 + x106*x55 + x53*x96;
	FLT x108 = 4*curve_0*curve_scale*x57*x59;
	FLT x109 = x102*x11 - x106*x83 - x20*x95;
	FLT x110 = 2*x3*x57*x59;
	FLT x111 = 4*curve_0*curve_scale*x63*x64;
	FLT x112 = x79*(x101*x70 + x106*x84 - x68*x96);
	FLT x113 = x109*x77;
	FLT x114 = sensor_y*x88;
	FLT x115 = sensor_z*x97;
	FLT x116 = obj_qi*x93;
	FLT x117 = x100*x116 - x114 - x115 - x116*x24 - x116*x33;
	FLT x118 = 2*x117*x8;
	FLT x119 = obj_qw*x29;
	FLT x120 = sensor_y*x119;
	FLT x121 = obj_qi*x30;
	FLT x122 = -sensor_z*(x116*x27 + x121) + x103 + x116*x46 + x116*x47 + x120;
	FLT x123 = 2*x122*x8;
	FLT x124 = sensor_z*x119;
	FLT x125 = -sensor_y*(x116*x42 + x121) + x116*x38 + x116*x41 - x124 + x89;
	FLT x126 = x118*x2 - x123*x53 + x125*x55;
	FLT x127 = x11*x118 + x122*x20 - x125*x83;
	FLT x128 = x79*(x117*x70 + x123*x68 + x125*x84);
	FLT x129 = x127*x77;
	FLT x130 = sensor_x*x90;
	FLT x131 = obj_qj*x93;
	FLT x132 = -x105*x131 + x115 + x130 + x131*x38 + x131*x41;
	FLT x133 = obj_qj*x30;
	FLT x134 = -sensor_x*(x131*x34 + x133) + x124 + x131*x24 + x131*x33 + x91;
	FLT x135 = 2*x134*x8;
	FLT x136 = sensor_x*x119;
	FLT x137 = -sensor_z*(x131*x27 + x133) + x131*x46 + x131*x47 - x136 + x98;
	FLT x138 = 2*x137*x8;
	FLT x139 = -x132*x55 + x135*x2 + x138*x53;
	FLT x140 = x11*x135 + x132*x83 - x137*x20;
	FLT x141 = x79*(x132*x84 - x134*x70 + x138*x68);
	FLT x142 = x140*x77;
	FLT x143 = obj_qk*x93;
	FLT x144 = x114 + x130 + x143*x46 + x143*x47 - x143*x92;
	FLT x145 = 2*x144*x8;
	FLT x146 = obj_qk*x30;
	FLT x147 = -sensor_x*(x143*x34 + x146) + x104 - x120 + x143*x24 + x143*x33;
	FLT x148 = 2*x147*x8;
	FLT x149 = -sensor_y*(x143*x42 + x146) + x136 + x143*x38 + x143*x41 + x99;
	FLT x150 = x145*x53 + x148*x2 - x149*x55;
	FLT x151 = x11*x148 - x144*x20 + x149*x83;
	FLT x152 = x79*(x145*x68 - x147*x70 + x149*x84);
	FLT x153 = x151*x77;
	*(out++) = x11*x65 + x2*x52 - x2*x60 - x61*x62 - x78 - x80 + x82*(x78 + x80);
	*(out++) = 2*curve_0*curve_scale*x55*x57*x59 + x16*x65 - x3*x51*x55 - x62*x83 - x77*x83 + x79*x84 - x85*(-x16*x77*x8 + x66*x79*x8);
	*(out++) = -2*curve_0*curve_scale*x20*x63*x64 + x20*x62 + x52*x53 - x53*x60 - x82*x86 + x86;
	*(out++) = x107*x108 - x107*x87 + x109*x110 - x109*x111 + 2*x112 + 2*x113 - x85*(x112 + x113);
	*(out++) = x108*x126 + x110*x127 - x111*x127 - x126*x87 + 2*x128 + 2*x129 - x85*(x128 + x129);
	*(out++) = -x108*x139 - x110*x140 + x111*x140 + x139*x87 + 2*x141 - 2*x142 - x85*(x141 - x142);
	*(out++) = -x108*x150 - x110*x151 + x111*x151 + x150*x87 + 2*x152 - 2*x153 - x85*(x152 - x153);
}

static inline void gen_reproject_axis_y_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0, FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qj, 2);
	FLT x1 = pow(lh_qk, 2);
	FLT x2 = pow(lh_qi, 2);
	FLT x3 = x0 + x2;
	FLT x4 = sqrt(pow(lh_qw, 2) + x1 + x3);
	FLT x5 = 2*x4;
	FLT x6 = x5*(x0 + x1) - 1;
	FLT x7 = tan(tilt_0*tilt_scale);
	FLT x8 = lh_qi*lh_qk;
	FLT x9 = lh_qj*lh_qw;
	FLT x10 = x8 + x9;
	FLT x11 = 2*lh_px*x4;
	FLT x12 = x10*x11;
	FLT x13 = lh_qj*lh_qk;
	FLT x14 = lh_qi*lh_qw;
	FLT x15 = x13 - x14;
	FLT x16 = 2*lh_py*x4;
	FLT x17 = x15*x16;
	FLT x18 = x3*x5 - 1;
	FLT x19 = lh_pz*x18;
	FLT x20 = obj_qi*obj_qk;
	FLT x21 = obj_qj*obj_qw;
	FLT x22 = sensor_z*(x20 + x21);
	FLT x23 = pow(obj_qi, 2);
	FLT x24 = pow(obj_qj, 2);
	FLT x25 = x23 + x24;
	FLT x26 = pow(obj_qk, 2);
	FLT x27 = sqrt(pow(obj_qw, 2) + x25 + x26);
	FLT x28 = 2*x27;
	FLT x29 = obj_qi*obj_qj;
	FLT x30 = obj_qk*obj_qw;
	FLT x31 = sensor_y*(x29 - x30);
	FLT x32 = x24 + x26;
	FLT x33 = obj_px - sensor_x*(x28*x32 - 1) + x22*x28 + x28*x31;
	FLT x34 = 2*x33*x4;
	FLT x35 = x10*x34;
	FLT x36 = sensor_x*(x29 + x30);
	FLT x37 = obj_qj*obj_qk;
	FLT x38 = obj_qi*obj_qw;
	FLT x39 = sensor_z*(x37 - x38);
	FLT x40 = x23 + x26;
	FLT x41 = obj_py - sensor_y*(x28*x40 - 1) + x28*x36 + x28*x39;
	FLT x42 = 2*x4*x41;
	FLT x43 = x15*x42;
	FLT x44 = sensor_y*(x37 + x38);
	FLT x45 = sensor_x*(x20 - x21);
	FLT x46 = obj_pz - sensor_z*(x25*x28 - 1) + x28*x44 + x28*x45;
	FLT x47 = x18*x46;
	FLT x48 = -x12 - x17 + x19 + x35 + x43 - x47;
	FLT x49 = 1.0/x48;
	FLT x50 = x49*x7;
	FLT x51 = 2*x10*x4;
	FLT x52 = lh_qi*lh_qj;
	FLT x53 = lh_qk*lh_qw;
	FLT x54 = x52 + x53;
	FLT x55 = x8 - x9;
	FLT x56 = 2*lh_pz*x4;
	FLT x57 = 2*x4*x46;
	FLT x58 = lh_px*x6 - x16*x54 - x33*x6 + x42*x54 - x55*x56 + x55*x57;
	FLT x59 = pow(x48, 2);
	FLT x60 = 1.0/x59;
	FLT x61 = x58*x60*x7;
	FLT x62 = pow(x58, 2);
	FLT x63 = pow(x48, -3);
	FLT x64 = 4*curve_0*curve_scale*x4*x62*x63;
	FLT x65 = x13 + x14;
	FLT x66 = x52 - x53;
	FLT x67 = x5*(x1 + x2) - 1;
	FLT x68 = lh_py*x67 - x11*x66 + x34*x66 - x41*x67 - x56*x65 + x57*x65;
	FLT x69 = 1.0/(x59 + pow(x68, 2));
	FLT x70 = x68*x69;
	FLT x71 = x48*x66;
	FLT x72 = 2*x4*x69;
	FLT x73 = cos(gibPhase_0 + atan2(x68, x12 + x17 - x19 - x35 - x43 + x47));
	FLT x74 = 2*gibMag_0*gib_scale*x73;
	FLT x75 = x4*x69;
	FLT x76 = 2*x15*x4;
	FLT x77 = x48*x69;
	FLT x78 = x67*x77 + x70*x76;
	FLT x79 = 2*x4*x54;
	FLT x80 = 4*curve_0*curve_scale*x4*x58*x60;
	FLT x81 = gibMag_0*gib_scale*x73;
	FLT x82 = x48*x65*x72;
	FLT x83 = x18*x70;
	FLT x84 = 2*x49*x7;
	FLT x85 = obj_qk*x27;
	FLT x86 = sensor_x*x85;
	FLT x87 = obj_qi*x27;
	FLT x88 = sensor_z*x87;
	FLT x89 = 1.0/x27;
	FLT x90 = obj_qw*x89;
	FLT x91 = sensor_y*x40;
	FLT x92 = x36*x90 + x39*x90 + x86 - x88 - x90*x91;
	FLT x93 = obj_qj*x27;
	FLT x94 = sensor_x*x93;
	FLT x95 = sensor_y*x87;
	FLT x96 = sensor_z*x25;
	FLT x97 = -x44*x90 - x45*x90 + x90*x96 + x94 - x95;
	FLT x98 = 2*x4*x97;
	FLT x99 = sensor_y*x85;
	FLT x100 = sensor_z*x93;
	FLT x101 = sensor_x*x32;
	FLT x102 = -x100 + x101*x90 - x22*x90 - x31*x90 + x99;
	FLT x103 = x102*x6 - x55*x98 + x79*x92;
	FLT x104 = 4*curve_0*curve_scale*x58*x60;
	FLT x105 = 2*x102*x4;
	FLT x106 = x10*x105 - x18*x97 - x76*x92;
	FLT x107 = 2*x58*x60*x7;
	FLT x108 = 4*curve_0*curve_scale*x62*x63;
	FLT x109 = x77*(x105*x66 + x65*x98 + x67*x92);
	FLT x110 = x106*x70;
	FLT x111 = sensor_y*x93;
	FLT x112 = sensor_z*x85;
	FLT x113 = obj_qi*x89;
	FLT x114 = x101*x113 - x111 - x112 - x113*x22 - x113*x31;
	FLT x115 = obj_qw*x27;
	FLT x116 = sensor_z*x115;
	FLT x117 = obj_qi*x28;
	FLT x118 = -sensor_y*(x113*x40 + x117) + x113*x36 + x113*x39 - x116 + x94;
	FLT x119 = sensor_y*x115;
	FLT x120 = -sensor_z*(x113*x25 + x117) + x113*x44 + x113*x45 + x119 + x86;
	FLT x121 = 2*x120*x4;
	FLT x122 = x114*x6 + x118*x79 + x121*x55;
	FLT x123 = 2*x114*x4;
	FLT x124 = x10*x123 - x118*x76 + x120*x18;
	FLT x125 = x77*(x118*x67 - x121*x65 + x123*x66);
	FLT x126 = x124*x70;
	FLT x127 = sensor_x*x87;
	FLT x128 = obj_qj*x89;
	FLT x129 = x112 + x127 + x128*x36 + x128*x39 - x128*x91;
	FLT x130 = sensor_x*x115;
	FLT x131 = obj_qj*x28;
	FLT x132 = -sensor_z*(x128*x25 + x131) + x128*x44 + x128*x45 - x130 + x99;
	FLT x133 = 2*x132*x4;
	FLT x134 = -sensor_x*(x128*x32 + x131) + x116 + x128*x22 + x128*x31 + x95;
	FLT x135 = x129*x79 + x133*x55 - x134*x6;
	FLT x136 = 2*x134*x4;
	FLT x137 = x10*x136 + x129*x76 - x132*x18;
	FLT x138 = x77*(-x129*x67 + x133*x65 + x136*x66);
	FLT x139 = x137*x70;
	FLT x140 = obj_qk*x89;
	FLT x141 = x111 + x127 + x140*x44 + x140*x45 - x140*x96;
	FLT x142 = 2*x141*x4;
	FLT x143 = obj_qk*x28;
	FLT x144 = -sensor_y*(x140*x40 + x143) + x100 + x130 + x140*x36 + x140*x39;
	FLT x145 = -sensor_x*(x140*x32 + x143) - x119 + x140*x22 + x140*x31 + x88;
	FLT x146 = x142*x55 + x144*x79 - x145*x6;
	FLT x147 = 2*x145*x4;
	FLT x148 = x10*x147 - x141*x18 + x144*x76;
	FLT x149 = x77*(x142*x65 - x144*x67 + x147*x66);
	FLT x150 = x148*x70;
	*(out++) = 2*curve_0*curve_scale*x58*x6*x60 + x10*x64 + x50*x6 + x51*x61 + x51*x70 - x71*x72 + x74*(-x10*x68*x75 + x71*x75);
	*(out++) = x15*x64 - x50*x79 - x54*x80 + x61*x76 - x78*x81 + x78;
	*(out++) = -2*curve_0*curve_scale*x18*x62*x63 - x18*x61 - 2*x4*x50*x55 - x55*x80 + x81*(x82 + x83) - x82 - x83;
	*(out++) = -x103*x104 - x103*x84 - x106*x107 - x106*x108 + 2*x109 - 2*x110 + x74*(-x109 + x110);
	*(out++) = -x104*x122 - x107*x124 - x108*x124 - x122*x84 + 2*x125 - 2*x126 + x74*(-x125 + x126);
	*(out++) = -x104*x135 + x107*x137 + x108*x137 - x135*x84 - 2*x138 + 2*x139 + x74*(x138 - x139);
	*(out++) = -x104*x146 + x107*x148 + x108*x148 - x146*x84 - 2*x149 + 2*x150 + x74*(x149 - x150);
}

