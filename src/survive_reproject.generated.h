 // NOTE: Auto-generated code; see tools/generate_reprojection_functions 
#include <math.h>
static inline void gen_reproject_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT phase_1, FLT tilt_scale, FLT tilt_0, FLT tilt_1, FLT curve_scale, FLT curve_0, FLT curve_1, FLT gib_scale, FLT gibPhase_0, FLT gibPhase_1, FLT gibMag_0, FLT gibMag_1) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi*lh_qj;
	FLT x1 = lh_qk*lh_qw;
	FLT x2 = x0 + x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = x3 + x4;
	FLT x6 = pow(lh_qk, 2);
	FLT x7 = sqrt(pow(lh_qw, 2) + x5 + x6);
	FLT x8 = 2 * x2 * x7;
	FLT x9 = tan(tilt_0 * tilt_scale);
	FLT x10 = lh_qi * lh_qw;
	FLT x11 = lh_qj * lh_qk;
	FLT x12 = x10 + x11;
	FLT x13 = obj_qi * obj_qj;
	FLT x14 = obj_qk * obj_qw;
	FLT x15 = sensor_x * (x13 + x14);
	FLT x16 = pow(obj_qi, 2);
	FLT x17 = pow(obj_qj, 2);
	FLT x18 = x16 + x17;
	FLT x19 = pow(obj_qk, 2);
	FLT x20 = sqrt(pow(obj_qw, 2) + x18 + x19);
	FLT x21 = 2 * x20;
	FLT x22 = obj_qj * obj_qk;
	FLT x23 = obj_qi * obj_qw;
	FLT x24 = sensor_z * (x22 - x23);
	FLT x25 = x16 + x19;
	FLT x26 = obj_py - sensor_y * (x21 * x25 - 1) + x15 * x21 + x21 * x24;
	FLT x27 = 2 * x26 * x7;
	FLT x28 = x12 * x27;
	FLT x29 = lh_qi * lh_qk;
	FLT x30 = lh_qj * lh_qw;
	FLT x31 = x29 - x30;
	FLT x32 = obj_qi * obj_qk;
	FLT x33 = obj_qj * obj_qw;
	FLT x34 = sensor_z * (x32 + x33);
	FLT x35 = sensor_y * (x13 - x14);
	FLT x36 = x17 + x19;
	FLT x37 = obj_px - sensor_x * (x21 * x36 - 1) + x21 * x34 + x21 * x35;
	FLT x38 = 2 * x37 * x7;
	FLT x39 = x31 * x38;
	FLT x40 = 2 * x7;
	FLT x41 = x40 * x5 - 1;
	FLT x42 = sensor_y * (x22 + x23);
	FLT x43 = sensor_x * (x32 - x33);
	FLT x44 = obj_pz - sensor_z * (x18 * x21 - 1) + x21 * x42 + x21 * x43;
	FLT x45 = x41 * x44;
	FLT x46 = lh_pz + x28 + x39 - x45;
	FLT x47 = 1.0 / x46;
	FLT x48 = x47 * x9;
	FLT x49 = -x10 + x11;
	FLT x50 = 2 * x44 * x7;
	FLT x51 = x40 * (x3 + x6) - 1;
	FLT x52 = lh_py + x2 * x38 - x26 * x51 + x49 * x50;
	FLT x53 = pow(x46, 2);
	FLT x54 = 1.0 / x53;
	FLT x55 = 4 * curve_0 * curve_scale * x52 * x54 * x7;
	FLT x56 = x52 * x9;
	FLT x57 = 2 * x31 * x54 * x7;
	FLT x58 = pow(x52, 2);
	FLT x59 = curve_0 * x58;
	FLT x60 = pow(x46, -3);
	FLT x61 = 4 * curve_scale * x31 * x60 * x7;
	FLT x62 = 2 * x31 * x7;
	FLT x63 = x29 + x30;
	FLT x64 = x50 * x63;
	FLT x65 = x0 - x1;
	FLT x66 = x27 * x65;
	FLT x67 = x40 * (x4 + x6) - 1;
	FLT x68 = x37 * x67;
	FLT x69 = lh_px + x64 + x66 - x68;
	FLT x70 = pow(x69, 2);
	FLT x71 = 1.0 / (x53 + x70);
	FLT x72 = x69 * x71;
	FLT x73 = x62 * x72;
	FLT x74 = x46 * x71;
	FLT x75 = x67 * x74;
	FLT x76 = -lh_pz - x28 - x39 + x45;
	FLT x77 = cos(gibPhase_0 + atan2(-lh_px - x64 - x66 + x68, x76));
	FLT x78 = gibMag_0 * gib_scale * x77;
	FLT x79 = 2 * x12 * x54 * x7;
	FLT x80 = 4 * curve_scale * x12 * x60 * x7;
	FLT x81 = x12 * x69 * x71;
	FLT x82 = 2 * x65 * x7;
	FLT x83 = 2 * gibMag_0 * gib_scale * x77;
	FLT x84 = x46 * x7;
	FLT x85 = 2 * x63 * x7;
	FLT x86 = x41 * x72 + x74 * x85;
	FLT x87 = 2 * x49 * x7;
	FLT x88 = x41 * x54;
	FLT x89 = 2 * curve_scale * x41 * x60;
	FLT x90 = 2 * x47 * x9;
	FLT x91 = obj_qk * x20;
	FLT x92 = sensor_y * x91;
	FLT x93 = obj_qj * x20;
	FLT x94 = sensor_z * x93;
	FLT x95 = sensor_x * x36;
	FLT x96 = 1.0 / x20;
	FLT x97 = obj_qw * x96;
	FLT x98 = -x34 * x97 - x35 * x97 + x92 - x94 + x95 * x97;
	FLT x99 = sensor_x * x93;
	FLT x100 = obj_qi * x20;
	FLT x101 = sensor_y * x100;
	FLT x102 = sensor_z * x18;
	FLT x103 = -x101 + x102 * x97 - x42 * x97 - x43 * x97 + x99;
	FLT x104 = 2 * x103 * x7;
	FLT x105 = sensor_x * x91;
	FLT x106 = sensor_z * x100;
	FLT x107 = sensor_y * x25;
	FLT x108 = x105 - x106 - x107 * x97 + x15 * x97 + x24 * x97;
	FLT x109 = x104 * x49 + x108 * x51 + x8 * x98;
	FLT x110 = 4 * curve_0 * curve_scale * x52 * x54;
	FLT x111 = 2 * x108 * x7;
	FLT x112 = -x103 * x41 - x111 * x12 + x62 * x98;
	FLT x113 = 2 * x112 * x54;
	FLT x114 = 4 * curve_scale * x112 * x60;
	FLT x115 = -x104 * x63 + x111 * x65 + x67 * x98;
	FLT x116 = x115 * x74;
	FLT x117 = x112 * x72;
	FLT x118 = sensor_y * x93;
	FLT x119 = sensor_z * x91;
	FLT x120 = obj_qi * x96;
	FLT x121 = -x118 - x119 - x120 * x34 - x120 * x35 + x120 * x95;
	FLT x122 = obj_qw * x20;
	FLT x123 = sensor_y * x122;
	FLT x124 = obj_qi * x21;
	FLT x125 = -sensor_z * (x120 * x18 + x124) + x105 + x120 * x42 + x120 * x43 + x123;
	FLT x126 = sensor_z * x122;
	FLT x127 = -sensor_y * (x120 * x25 + x124) + x120 * x15 + x120 * x24 - x126 + x99;
	FLT x128 = x121 * x8 - x125 * x87 + x127 * x51;
	FLT x129 = 2 * x127 * x7;
	FLT x130 = -x12 * x129 + x121 * x62 + x125 * x41;
	FLT x131 = 2 * x130 * x54;
	FLT x132 = 4 * curve_0 * curve_scale * x58 * x60;
	FLT x133 = x121 * x67 + x125 * x85 + x129 * x65;
	FLT x134 = x133 * x74;
	FLT x135 = x130 * x72;
	FLT x136 = sensor_x * x100;
	FLT x137 = obj_qj * x96;
	FLT x138 = -x107 * x137 + x119 + x136 + x137 * x15 + x137 * x24;
	FLT x139 = obj_qj * x21;
	FLT x140 = -sensor_x * (x137 * x36 + x139) + x101 + x126 + x137 * x34 + x137 * x35;
	FLT x141 = sensor_x * x122;
	FLT x142 = -sensor_z * (x137 * x18 + x139) + x137 * x42 + x137 * x43 - x141 + x92;
	FLT x143 = -x138 * x51 + x140 * x8 + x142 * x87;
	FLT x144 = 2 * x138 * x7;
	FLT x145 = x12 * x144 + x140 * x62 - x142 * x41;
	FLT x146 = 2 * x145 * x54;
	FLT x147 = -x140 * x67 + x142 * x85 + x144 * x65;
	FLT x148 = x147 * x74;
	FLT x149 = x145 * x72;
	FLT x150 = obj_qk * x96;
	FLT x151 = -x102 * x150 + x118 + x136 + x150 * x42 + x150 * x43;
	FLT x152 = 2 * x151 * x7;
	FLT x153 = obj_qk * x21;
	FLT x154 = -sensor_x * (x150 * x36 + x153) + x106 - x123 + x150 * x34 + x150 * x35;
	FLT x155 = -sensor_y * (x150 * x25 + x153) + x141 + x15 * x150 + x150 * x24 + x94;
	FLT x156 = x152 * x49 + x154 * x8 - x155 * x51;
	FLT x157 = 2 * x155 * x7;
	FLT x158 = x12 * x157 - x151 * x41 + x154 * x62;
	FLT x159 = 2 * x158 * x54;
	FLT x160 = x152 * x63 - x154 * x67 + x157 * x65;
	FLT x161 = x160 * x74;
	FLT x162 = x158 * x72;
	FLT x163 = tan(tilt_1 * tilt_scale);
	FLT x164 = x163 * x47;
	FLT x165 = x163 * x69;
	FLT x166 = curve_1 * x70;
	FLT x167 = 1.0 / (x53 + x58);
	FLT x168 = x167 * x46;
	FLT x169 = x167 * x52;
	FLT x170 = cos(gibPhase_1 + atan2(x52, x76));
	FLT x171 = 2 * gibMag_1 * gib_scale * x170;
	FLT x172 = 2 * x12 * x169 * x7 + x168 * x51;
	FLT x173 = 4 * curve_1 * curve_scale * x54 * x69 * x7;
	FLT x174 = gibMag_1 * gib_scale * x170;
	FLT x175 = x168 * x87;
	FLT x176 = x169 * x41;
	FLT x177 = 2 * x163 * x47;
	FLT x178 = 4 * curve_1 * curve_scale * x54 * x69;
	FLT x179 = x109 * x168;
	FLT x180 = x112 * x169;
	FLT x181 = 4 * curve_1 * curve_scale * x60 * x70;
	FLT x182 = x128 * x168;
	FLT x183 = x130 * x169;
	FLT x184 = x143 * x168;
	FLT x185 = x145 * x169;
	FLT x186 = x156 * x168;
	FLT x187 = x158 * x169;
	*(out++) = -x2 * x55 + x48 * x8 - x56 * x57 + x59 * x61 - x73 - x75 + x78 * (x73 + x75);
	*(out++) = 2 * curve_0 * curve_scale * x51 * x52 * x54 - x40 * x81 - x48 * x51 - x56 * x79 + x59 * x80 + x74 * x82 -
			   x83 * (x65 * x71 * x84 - x7 * x81);
	*(out++) = x48 * x87 - x49 * x55 + x56 * x88 - x59 * x89 - x78 * x86 + x86;
	*(out++) = x109 * x110 - x109 * x90 + x113 * x56 - x114 * x59 + 2 * x116 + 2 * x117 - x83 * (x116 + x117);
	*(out++) = x110 * x128 - x128 * x90 - x130 * x132 + x131 * x56 + 2 * x134 + 2 * x135 - x83 * (x134 + x135);
	*(out++) = -x110 * x143 + x132 * x145 + x143 * x90 - x146 * x56 + 2 * x148 - 2 * x149 - x83 * (x148 - x149);
	*(out++) = -x110 * x156 + x132 * x158 + x156 * x90 - x159 * x56 + 2 * x161 - 2 * x162 - x83 * (x161 - x162);
	*(out++) = 2 * curve_1 * curve_scale * x54 * x67 * x69 + x164 * x67 + x165 * x57 + x166 * x61 - x168 * x8 +
			   x169 * x62 + x171 * (x167 * x2 * x84 - x169 * x31 * x7);
	*(out++) = -x164 * x82 + x165 * x79 + x166 * x80 - x172 * x174 + x172 - x173 * x65;
	*(out++) = -x164 * x85 - x165 * x88 - x166 * x89 - x173 * x63 + x174 * (x175 + x176) - x175 - x176;
	*(out++) = -x113 * x165 - x114 * x166 - x115 * x177 - x115 * x178 + x171 * (-x179 + x180) + 2 * x179 - 2 * x180;
	*(out++) = -x130 * x181 - x131 * x165 - x133 * x177 - x133 * x178 + x171 * (-x182 + x183) + 2 * x182 - 2 * x183;
	*(out++) = x145 * x181 + x146 * x165 - x147 * x177 - x147 * x178 + x171 * (x184 - x185) - 2 * x184 + 2 * x185;
	*(out++) = x158 * x181 + x159 * x165 - x160 * x177 - x160 * x178 + x171 * (x186 - x187) - 2 * x186 + 2 * x187;
}

static inline void gen_reproject_axis_x_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0, FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = lh_qi*lh_qj;
	FLT x1 = lh_qk*lh_qw;
	FLT x2 = x0 + x1;
	FLT x3 = pow(lh_qi, 2);
	FLT x4 = pow(lh_qj, 2);
	FLT x5 = x3 + x4;
	FLT x6 = pow(lh_qk, 2);
	FLT x7 = sqrt(pow(lh_qw, 2) + x5 + x6);
	FLT x8 = 2 * x2 * x7;
	FLT x9 = tan(tilt_0 * tilt_scale);
	FLT x10 = lh_qi * lh_qw;
	FLT x11 = lh_qj * lh_qk;
	FLT x12 = x10 + x11;
	FLT x13 = obj_qi * obj_qj;
	FLT x14 = obj_qk * obj_qw;
	FLT x15 = sensor_x * (x13 + x14);
	FLT x16 = pow(obj_qi, 2);
	FLT x17 = pow(obj_qj, 2);
	FLT x18 = x16 + x17;
	FLT x19 = pow(obj_qk, 2);
	FLT x20 = sqrt(pow(obj_qw, 2) + x18 + x19);
	FLT x21 = 2 * x20;
	FLT x22 = obj_qj * obj_qk;
	FLT x23 = obj_qi * obj_qw;
	FLT x24 = sensor_z * (x22 - x23);
	FLT x25 = x16 + x19;
	FLT x26 = obj_py - sensor_y * (x21 * x25 - 1) + x15 * x21 + x21 * x24;
	FLT x27 = 2 * x26 * x7;
	FLT x28 = x12 * x27;
	FLT x29 = lh_qi * lh_qk;
	FLT x30 = lh_qj * lh_qw;
	FLT x31 = x29 - x30;
	FLT x32 = obj_qi * obj_qk;
	FLT x33 = obj_qj * obj_qw;
	FLT x34 = sensor_z * (x32 + x33);
	FLT x35 = sensor_y * (x13 - x14);
	FLT x36 = x17 + x19;
	FLT x37 = obj_px - sensor_x * (x21 * x36 - 1) + x21 * x34 + x21 * x35;
	FLT x38 = 2 * x37 * x7;
	FLT x39 = x31 * x38;
	FLT x40 = 2 * x7;
	FLT x41 = x40 * x5 - 1;
	FLT x42 = sensor_y * (x22 + x23);
	FLT x43 = sensor_x * (x32 - x33);
	FLT x44 = obj_pz - sensor_z * (x18 * x21 - 1) + x21 * x42 + x21 * x43;
	FLT x45 = x41 * x44;
	FLT x46 = lh_pz + x28 + x39 - x45;
	FLT x47 = 1.0 / x46;
	FLT x48 = x47 * x9;
	FLT x49 = -x10 + x11;
	FLT x50 = 2 * x44 * x7;
	FLT x51 = x40 * (x3 + x6) - 1;
	FLT x52 = lh_py + x2 * x38 - x26 * x51 + x49 * x50;
	FLT x53 = pow(x46, 2);
	FLT x54 = 1.0 / x53;
	FLT x55 = 4 * curve_0 * curve_scale * x52 * x54 * x7;
	FLT x56 = 2 * x31 * x7;
	FLT x57 = x52 * x54 * x9;
	FLT x58 = pow(x52, 2);
	FLT x59 = pow(x46, -3);
	FLT x60 = 4 * curve_0 * curve_scale * x58 * x59 * x7;
	FLT x61 = x29 + x30;
	FLT x62 = x50 * x61;
	FLT x63 = x0 - x1;
	FLT x64 = x27 * x63;
	FLT x65 = x40 * (x4 + x6) - 1;
	FLT x66 = x37 * x65;
	FLT x67 = lh_px + x62 + x64 - x66;
	FLT x68 = 1.0 / (x53 + pow(x67, 2));
	FLT x69 = x67 * x68;
	FLT x70 = x56 * x69;
	FLT x71 = x46 * x68;
	FLT x72 = x65 * x71;
	FLT x73 = cos(gibPhase_0 + atan2(-lh_px - x62 - x64 + x66, -lh_pz - x28 - x39 + x45));
	FLT x74 = gibMag_0 * gib_scale * x73;
	FLT x75 = 2 * x12 * x7;
	FLT x76 = x46 * x63;
	FLT x77 = 2 * gibMag_0 * gib_scale * x73;
	FLT x78 = x68 * x7;
	FLT x79 = 2 * x61 * x7;
	FLT x80 = x41 * x69 + x71 * x79;
	FLT x81 = 2 * x49 * x7;
	FLT x82 = 2 * x47 * x9;
	FLT x83 = obj_qk * x20;
	FLT x84 = sensor_y * x83;
	FLT x85 = obj_qj * x20;
	FLT x86 = sensor_z * x85;
	FLT x87 = sensor_x * x36;
	FLT x88 = 1.0 / x20;
	FLT x89 = obj_qw * x88;
	FLT x90 = -x34 * x89 - x35 * x89 + x84 - x86 + x87 * x89;
	FLT x91 = sensor_x * x85;
	FLT x92 = obj_qi * x20;
	FLT x93 = sensor_y * x92;
	FLT x94 = sensor_z * x18;
	FLT x95 = -x42 * x89 - x43 * x89 + x89 * x94 + x91 - x93;
	FLT x96 = 2 * x7 * x95;
	FLT x97 = sensor_x * x83;
	FLT x98 = sensor_z * x92;
	FLT x99 = sensor_y * x25;
	FLT x100 = x15 * x89 + x24 * x89 - x89 * x99 + x97 - x98;
	FLT x101 = x100 * x51 + x49 * x96 + x8 * x90;
	FLT x102 = 4 * curve_0 * curve_scale * x52 * x54;
	FLT x103 = 2 * x100 * x7;
	FLT x104 = -x103 * x12 - x41 * x95 + x56 * x90;
	FLT x105 = 2 * x52 * x54 * x9;
	FLT x106 = 4 * curve_0 * curve_scale * x58 * x59;
	FLT x107 = x71 * (x103 * x63 - x61 * x96 + x65 * x90);
	FLT x108 = x104 * x69;
	FLT x109 = sensor_y * x85;
	FLT x110 = sensor_z * x83;
	FLT x111 = obj_qi * x88;
	FLT x112 = -x109 - x110 - x111 * x34 - x111 * x35 + x111 * x87;
	FLT x113 = obj_qw * x20;
	FLT x114 = sensor_y * x113;
	FLT x115 = obj_qi * x21;
	FLT x116 = -sensor_z * (x111 * x18 + x115) + x111 * x42 + x111 * x43 + x114 + x97;
	FLT x117 = sensor_z * x113;
	FLT x118 = -sensor_y * (x111 * x25 + x115) + x111 * x15 + x111 * x24 - x117 + x91;
	FLT x119 = x112 * x8 - x116 * x81 + x118 * x51;
	FLT x120 = 2 * x118 * x7;
	FLT x121 = x112 * x56 + x116 * x41 - x12 * x120;
	FLT x122 = x71 * (x112 * x65 + x116 * x79 + x120 * x63);
	FLT x123 = x121 * x69;
	FLT x124 = sensor_x * x92;
	FLT x125 = obj_qj * x88;
	FLT x126 = x110 + x124 + x125 * x15 + x125 * x24 - x125 * x99;
	FLT x127 = obj_qj * x21;
	FLT x128 = -sensor_x * (x125 * x36 + x127) + x117 + x125 * x34 + x125 * x35 + x93;
	FLT x129 = sensor_x * x113;
	FLT x130 = -sensor_z * (x125 * x18 + x127) + x125 * x42 + x125 * x43 - x129 + x84;
	FLT x131 = -x126 * x51 + x128 * x8 + x130 * x81;
	FLT x132 = 2 * x126 * x7;
	FLT x133 = x12 * x132 + x128 * x56 - x130 * x41;
	FLT x134 = x71 * (-x128 * x65 + x130 * x79 + x132 * x63);
	FLT x135 = x133 * x69;
	FLT x136 = obj_qk * x88;
	FLT x137 = x109 + x124 + x136 * x42 + x136 * x43 - x136 * x94;
	FLT x138 = 2 * x137 * x7;
	FLT x139 = obj_qk * x21;
	FLT x140 = -sensor_x * (x136 * x36 + x139) - x114 + x136 * x34 + x136 * x35 + x98;
	FLT x141 = -sensor_y * (x136 * x25 + x139) + x129 + x136 * x15 + x136 * x24 + x86;
	FLT x142 = x138 * x49 + x140 * x8 - x141 * x51;
	FLT x143 = 2 * x141 * x7;
	FLT x144 = x12 * x143 - x137 * x41 + x140 * x56;
	FLT x145 = x71 * (x138 * x61 - x140 * x65 + x143 * x63);
	FLT x146 = x144 * x69;
	*(out++) = -x2 * x55 + x31 * x60 + x48 * x8 - x56 * x57 - x70 - x72 + x74 * (x70 + x72);
	*(out++) = 2 * curve_0 * curve_scale * x51 * x52 * x54 + x12 * x60 - x48 * x51 - x57 * x75 + 2 * x68 * x7 * x76 -
			   x69 * x75 - x77 * (-x12 * x67 * x78 + x76 * x78);
	*(out++) = -2 * curve_0 * curve_scale * x41 * x58 * x59 + x41 * x57 + x48 * x81 - x49 * x55 - x74 * x80 + x80;
	*(out++) = x101 * x102 - x101 * x82 + x104 * x105 - x104 * x106 + 2 * x107 + 2 * x108 - x77 * (x107 + x108);
	*(out++) = x102 * x119 + x105 * x121 - x106 * x121 - x119 * x82 + 2 * x122 + 2 * x123 - x77 * (x122 + x123);
	*(out++) = -x102 * x131 - x105 * x133 + x106 * x133 + x131 * x82 + 2 * x134 - 2 * x135 - x77 * (x134 - x135);
	*(out++) = -x102 * x142 - x105 * x144 + x106 * x144 + x142 * x82 + 2 * x145 - 2 * x146 - x77 * (x145 - x146);
}

static inline void gen_reproject_axis_y_jac_obj_p(FLT* out, const FLT *obj, const FLT *sensor, const FLT *lh, FLT phase_scale, FLT phase_0, FLT tilt_scale, FLT tilt_0, FLT curve_scale, FLT curve_0, FLT gib_scale, FLT gibPhase_0, FLT gibMag_0) {
	FLT obj_px = *(obj++);
	FLT obj_py = *(obj++);
	FLT obj_pz = *(obj++);
	FLT obj_qw = *(obj++);
	FLT obj_qi = *(obj++);
	FLT obj_qj = *(obj++);
	FLT obj_qk = *(obj++);
	FLT sensor_x = *(sensor++);
	FLT sensor_y = *(sensor++);
	FLT sensor_z = *(sensor++);
	FLT lh_px = *(lh++);
	FLT lh_py = *(lh++);
	FLT lh_pz = *(lh++);
	FLT lh_qw = *(lh++);
	FLT lh_qi = *(lh++);
	FLT lh_qj = *(lh++);
	FLT lh_qk = *(lh++);
	FLT x0 = pow(lh_qj, 2);
	FLT x1 = pow(lh_qk, 2);
	FLT x2 = pow(lh_qi, 2);
	FLT x3 = x0 + x2;
	FLT x4 = sqrt(pow(lh_qw, 2) + x1 + x3);
	FLT x5 = 2*x4;
	FLT x6 = x5*(x0 + x1) - 1;
	FLT x7 = tan(tilt_0*tilt_scale);
	FLT x8 = lh_qi * lh_qw;
	FLT x9 = lh_qj * lh_qk;
	FLT x10 = x8 + x9;
	FLT x11 = obj_qi * obj_qj;
	FLT x12 = obj_qk * obj_qw;
	FLT x13 = sensor_x * (x11 + x12);
	FLT x14 = pow(obj_qi, 2);
	FLT x15 = pow(obj_qj, 2);
	FLT x16 = x14 + x15;
	FLT x17 = pow(obj_qk, 2);
	FLT x18 = sqrt(pow(obj_qw, 2) + x16 + x17);
	FLT x19 = 2 * x18;
	FLT x20 = obj_qj * obj_qk;
	FLT x21 = obj_qi * obj_qw;
	FLT x22 = sensor_z * (x20 - x21);
	FLT x23 = x14 + x17;
	FLT x24 = obj_py - sensor_y * (x19 * x23 - 1) + x13 * x19 + x19 * x22;
	FLT x25 = 2 * x24 * x4;
	FLT x26 = x10 * x25;
	FLT x27 = lh_qi * lh_qk;
	FLT x28 = lh_qj * lh_qw;
	FLT x29 = x27 - x28;
	FLT x30 = obj_qi * obj_qk;
	FLT x31 = obj_qj * obj_qw;
	FLT x32 = sensor_z * (x30 + x31);
	FLT x33 = sensor_y * (x11 - x12);
	FLT x34 = x15 + x17;
	FLT x35 = obj_px - sensor_x * (x19 * x34 - 1) + x19 * x32 + x19 * x33;
	FLT x36 = 2 * x35 * x4;
	FLT x37 = x29 * x36;
	FLT x38 = x3 * x5 - 1;
	FLT x39 = sensor_y * (x20 + x21);
	FLT x40 = sensor_x * (x30 - x31);
	FLT x41 = obj_pz - sensor_z * (x16 * x19 - 1) + x19 * x39 + x19 * x40;
	FLT x42 = x38 * x41;
	FLT x43 = lh_pz + x26 + x37 - x42;
	FLT x44 = 1.0 / x43;
	FLT x45 = x44 * x7;
	FLT x46 = 2 * x29 * x4;
	FLT x47 = x27 + x28;
	FLT x48 = 2 * x4 * x41;
	FLT x49 = lh_qi * lh_qj;
	FLT x50 = lh_qk * lh_qw;
	FLT x51 = x49 - x50;
	FLT x52 = lh_px + x25 * x51 - x35 * x6 + x47 * x48;
	FLT x53 = pow(x43, 2);
	FLT x54 = 1.0 / x53;
	FLT x55 = x52 * x54 * x7;
	FLT x56 = pow(x52, 2);
	FLT x57 = pow(x43, -3);
	FLT x58 = 4 * curve_0 * curve_scale * x4 * x56 * x57;
	FLT x59 = x49 + x50;
	FLT x60 = 2 * x4 * x59;
	FLT x61 = -x8 + x9;
	FLT x62 = x5 * (x1 + x2) - 1;
	FLT x63 = lh_py - x24 * x62 + x36 * x59 + x48 * x61;
	FLT x64 = 1.0 / (x53 + pow(x63, 2));
	FLT x65 = x43 * x64;
	FLT x66 = x63 * x64;
	FLT x67 = cos(gibPhase_0 + atan2(x63, -lh_pz - x26 - x37 + x42));
	FLT x68 = 2 * gibMag_0 * gib_scale * x67;
	FLT x69 = 2 * x10 * x4;
	FLT x70 = x62 * x65 + x66 * x69;
	FLT x71 = 4 * curve_0 * curve_scale * x4 * x52 * x54;
	FLT x72 = gibMag_0 * gib_scale * x67;
	FLT x73 = 2 * x4 * x47;
	FLT x74 = 2 * x4 * x61;
	FLT x75 = x65 * x74;
	FLT x76 = x38 * x66;
	FLT x77 = 2 * x44 * x7;
	FLT x78 = obj_qk * x18;
	FLT x79 = sensor_x * x78;
	FLT x80 = obj_qi * x18;
	FLT x81 = sensor_z * x80;
	FLT x82 = 1.0 / x18;
	FLT x83 = obj_qw * x82;
	FLT x84 = sensor_y * x23;
	FLT x85 = x13 * x83 + x22 * x83 + x79 - x81 - x83 * x84;
	FLT x86 = 2 * x4 * x85;
	FLT x87 = obj_qj * x18;
	FLT x88 = sensor_x * x87;
	FLT x89 = sensor_y * x80;
	FLT x90 = sensor_z * x16;
	FLT x91 = -x39 * x83 - x40 * x83 + x83 * x90 + x88 - x89;
	FLT x92 = 2 * x4 * x91;
	FLT x93 = sensor_y * x78;
	FLT x94 = sensor_z * x87;
	FLT x95 = sensor_x * x34;
	FLT x96 = -x32 * x83 - x33 * x83 + x83 * x95 + x93 - x94;
	FLT x97 = -x47 * x92 + x51 * x86 + x6 * x96;
	FLT x98 = 4 * curve_0 * curve_scale * x52 * x54;
	FLT x99 = -x10 * x86 - x38 * x91 + x46 * x96;
	FLT x100 = 2 * x52 * x54 * x7;
	FLT x101 = 4 * curve_0 * curve_scale * x56 * x57;
	FLT x102 = x65 * (x60 * x96 + x61 * x92 + x62 * x85);
	FLT x103 = x66 * x99;
	FLT x104 = sensor_y * x87;
	FLT x105 = sensor_z * x78;
	FLT x106 = obj_qi * x82;
	FLT x107 = -x104 - x105 - x106 * x32 - x106 * x33 + x106 * x95;
	FLT x108 = obj_qw * x18;
	FLT x109 = sensor_y * x108;
	FLT x110 = obj_qi * x19;
	FLT x111 = -sensor_z * (x106 * x16 + x110) + x106 * x39 + x106 * x40 + x109 + x79;
	FLT x112 = sensor_z * x108;
	FLT x113 = -sensor_y * (x106 * x23 + x110) + x106 * x13 + x106 * x22 - x112 + x88;
	FLT x114 = 2 * x113 * x4;
	FLT x115 = x107 * x6 + x111 * x73 + x114 * x51;
	FLT x116 = -x10 * x114 + x107 * x46 + x111 * x38;
	FLT x117 = x65 * (x107 * x60 - x111 * x74 + x113 * x62);
	FLT x118 = x116 * x66;
	FLT x119 = sensor_x * x80;
	FLT x120 = obj_qj * x82;
	FLT x121 = x105 + x119 + x120 * x13 + x120 * x22 - x120 * x84;
	FLT x122 = 2 * x121 * x4;
	FLT x123 = sensor_x * x108;
	FLT x124 = obj_qj * x19;
	FLT x125 = -sensor_z * (x120 * x16 + x124) + x120 * x39 + x120 * x40 - x123 + x93;
	FLT x126 = -sensor_x * (x120 * x34 + x124) + x112 + x120 * x32 + x120 * x33 + x89;
	FLT x127 = x122 * x51 + x125 * x73 - x126 * x6;
	FLT x128 = x10 * x122 - x125 * x38 + x126 * x46;
	FLT x129 = x65 * (-x121 * x62 + x125 * x74 + x126 * x60);
	FLT x130 = x128 * x66;
	FLT x131 = obj_qk * x82;
	FLT x132 = x104 + x119 + x131 * x39 + x131 * x40 - x131 * x90;
	FLT x133 = 2*x132*x4;
	FLT x134 = obj_qk * x19;
	FLT x135 = -sensor_y * (x131 * x23 + x134) + x123 + x13 * x131 + x131 * x22 + x94;
	FLT x136 = 2 * x135 * x4;
	FLT x137 = -sensor_x * (x131 * x34 + x134) - x109 + x131 * x32 + x131 * x33 + x81;
	FLT x138 = x133 * x47 + x136 * x51 - x137 * x6;
	FLT x139 = x10 * x136 - x132 * x38 + x137 * x46;
	FLT x140 = x65 * (x133 * x61 - x135 * x62 + x137 * x60);
	FLT x141 = x139 * x66;
	*(out++) = 2 * curve_0 * curve_scale * x52 * x54 * x6 + x29 * x58 + x45 * x6 + x46 * x55 + x46 * x66 - x60 * x65 +
			   x68 * (-x29 * x4 * x66 + x4 * x59 * x65);
	*(out++) = x10 * x58 - 2 * x4 * x45 * x51 - x51 * x71 + x55 * x69 - x70 * x72 + x70;
	*(out++) = -2 * curve_0 * curve_scale * x38 * x56 * x57 - x38 * x55 - x45 * x73 - x47 * x71 + x72 * (x75 + x76) -
			   x75 - x76;
	*(out++) = -x100 * x99 - x101 * x99 + 2 * x102 - 2 * x103 + x68 * (-x102 + x103) - x77 * x97 - x97 * x98;
	*(out++) = -x100 * x116 - x101 * x116 - x115 * x77 - x115 * x98 + 2 * x117 - 2 * x118 + x68 * (-x117 + x118);
	*(out++) = x100 * x128 + x101 * x128 - x127 * x77 - x127 * x98 - 2 * x129 + 2 * x130 + x68 * (x129 - x130);
	*(out++) = x100 * x139 + x101 * x139 - x138 * x77 - x138 * x98 - 2 * x140 + 2 * x141 + x68 * (x140 - x141);
}

